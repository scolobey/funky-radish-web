[{"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/index.js":"1","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/stateLoader.js":"2","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/App.js":"3","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/serviceWorker.js":"4","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/store/index.js":"5","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/actions/Actions.js":"6","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipes.js":"7","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipe.js":"8","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Navigation.js":"9","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/About.js":"10","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Builder.js":"11","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Warning.js":"12","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/PrivacyPolicy.js":"13","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Loader.js":"14","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/AuthView.js":"15","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RoadMap.js":"16","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Redirector.js":"17","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/reducers/index.js":"18","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/action-types.js":"19","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/middleware/index.js":"20","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/SearchBar.js":"21","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Menu.js":"22","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/Auth.js":"23","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Verification.js":"24","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RecipeList.js":"25","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/useRecipes.js":"26","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/RealmApp.js":"27","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/RealmApolloProvider.js":"28","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/RealmService.js":"29","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/api.js":"30"},{"size":1459,"mtime":1611474640117,"results":"31","hashOfConfig":"32"},{"size":952,"mtime":1561992866483,"results":"33","hashOfConfig":"32"},{"size":1724,"mtime":1610921919803,"results":"34","hashOfConfig":"32"},{"size":4948,"mtime":1559933922204,"results":"35","hashOfConfig":"32"},{"size":962,"mtime":1610921919819,"results":"36","hashOfConfig":"32"},{"size":2355,"mtime":1610947077830,"results":"37","hashOfConfig":"32"},{"size":3086,"mtime":1611477522594,"results":"38","hashOfConfig":"32"},{"size":1674,"mtime":1610921923210,"results":"39","hashOfConfig":"32"},{"size":1104,"mtime":1610921919806,"results":"40","hashOfConfig":"32"},{"size":946,"mtime":1584411818856,"results":"41","hashOfConfig":"32"},{"size":3203,"mtime":1610921923209,"results":"42","hashOfConfig":"32"},{"size":492,"mtime":1561959529670,"results":"43","hashOfConfig":"32"},{"size":5888,"mtime":1610921923209,"results":"44","hashOfConfig":"32"},{"size":1082,"mtime":1561959529667,"results":"45","hashOfConfig":"32"},{"size":1876,"mtime":1611475273999,"results":"46","hashOfConfig":"32"},{"size":544,"mtime":1559933922199,"results":"47","hashOfConfig":"32"},{"size":504,"mtime":1561959529669,"results":"48","hashOfConfig":"32"},{"size":2757,"mtime":1611474640118,"results":"49","hashOfConfig":"32"},{"size":1099,"mtime":1610921919810,"results":"50","hashOfConfig":"32"},{"size":12115,"mtime":1611477323593,"results":"51","hashOfConfig":"32"},{"size":634,"mtime":1610921923211,"results":"52","hashOfConfig":"32"},{"size":1590,"mtime":1561966585228,"results":"53","hashOfConfig":"32"},{"size":1055,"mtime":1611475015118,"results":"54","hashOfConfig":"32"},{"size":952,"mtime":1611002307912,"results":"55","hashOfConfig":"32"},{"size":970,"mtime":1611474640114,"results":"56","hashOfConfig":"32"},{"size":645,"mtime":1611474640116,"results":"57","hashOfConfig":"32"},{"size":1281,"mtime":1611474640113,"results":"58","hashOfConfig":"32"},{"size":1361,"mtime":1611474640115,"results":"59","hashOfConfig":"32"},{"size":1992,"mtime":1611477381447,"results":"60","hashOfConfig":"32"},{"size":172,"mtime":1611475337597,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"65"},"pzh3uy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/index.js",["128","129"],"\"use strict\";\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport RealmApolloProvider from \"./graphql/RealmApolloProvider\";\nimport { useRealmApp, RealmAppProvider } from \"./RealmApp\";\n\nimport store from \"./store/index\";\nimport throttle from \"lodash/throttle\";\nimport { saveState } from './stateLoader.js';\nimport { addRecipe } from \"./actions/Actions\";\n\nexport const APP_ID = \"funky_radish_app-aarlp\";\n\nstore.subscribe(throttle(() => {\n  saveState({\n    recipes: store.getState().recipes,\n    filteredRecipes: store.getState().recipes,\n    warnings: []\n  });\n}, 1000));\n\nwindow.store = store;\nwindow.addRecipe = addRecipe;\n\nReactDOM.render(\n  <RealmAppProvider appId={APP_ID}>\n    <RealmApolloProvider>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </RealmApolloProvider>\n  </RealmAppProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["130","131"],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/stateLoader.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/App.js",["132","133","134"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\n\nimport Navigation from './components/Navigation';\n\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport RoadMap from './components/RoadMap';\nimport About from './components/About';\nimport Builder from \"./components/Builder\";\nimport Recipes from \"./components/Recipes.js\";\nimport Recipe from \"./components/Recipe.js\";\nimport Verification from './components/Verification.js';\n\nimport AuthView from './components/AuthView';\nimport Loader from \"./components/Loader\";\nimport Warning from \"./components/Warning\";\nimport Redirector from './components/Redirector';\n\nimport './App.css';\n\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-141908035-1');\n    ReactGA.pageview('/');\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Loader />\n        <Redirector />\n        <Warning />\n\n        <div className=\"content\">\n          <Route path=\"/\" exact component={Recipes} />\n          <Route path=\"/login/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/signup/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/about/\" exact component={About} />\n          <Route path=\"/roadmap/\" component={RoadMap} />\n          <Route path=\"/privacy/\" component={PrivacyPolicy} />\n          <Route path=\"/verify/:token?\" component={Verification} />\n          <Route path=\"/builder/:clientID?\" component={Builder} />\n          <Route path=\"/recipes/:recipeTitle?\" component={Recipe} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/serviceWorker.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/store/index.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/actions/Actions.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipes.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipe.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Navigation.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/About.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Builder.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Warning.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/PrivacyPolicy.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Loader.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/AuthView.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RoadMap.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Redirector.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/reducers/index.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/action-types.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/middleware/index.js",["135","136","137","138"],"import {\n  ADD_RECIPE,\n  GET_TOKEN,\n  GET_RECIPES,\n  VERIFY_EMAIL,\n  DELETE_REMOTE_RECIPE,\n  LOGIN,\n  SIGNUP,\n  WARNING,\n  GET_RECIPE\n} from \"../constants/action-types\";\n\nimport {\n  getRecipes,\n  updateRecipe,\n  deleteLocalRecipe,\n  authFailed,\n  getToken,\n  setVerified,\n  warning,\n  recipesLoaded,\n  setUsername,\n  toggleLoader,\n  warningToggle,\n  setRedirect,\n  setRecipe\n} from \"../actions/Actions\";\n\nimport {v1 as uuid} from \"uuid\";\n\nimport Auth from '../Auth'\nimport RealmService from '../services/RealmService'\nconst auth = new Auth();\nconst realmService = new RealmService();\n\nvar moment = require('moment');\n\nexport function loginMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === LOGIN) {\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            return dispatch(getToken({email: action.user.email, password: action.user.password}));\n          case 2:\n            return dispatch(warning('Invalid password.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function signupMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === SIGNUP) {\n\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            break;\n          case 2:\n            return dispatch(warning('Password needs 8 characters and a number.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n\n        var params = {\n          email: action.user.email,\n          password: action.user.password\n        };\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/users\", {\n          method: 'post',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message == \"Verification email sent.\") {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(\"Check your email for a link to help complete your signup.\"))\n          } else {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          dispatch(toggleLoader(false));\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function tokenCollectionMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === GET_TOKEN) {\n        let token = auth.getToken();\n\n        if (token) {\n          return dispatch(getRecipes(token));\n        }\n\n        if (!action.authData) {\n          return dispatch(authFailed(\"not logged in.\"));\n        }\n\n        var params = {\n          email: action.authData.email,\n          password: action.authData.password\n        };\n\n        var formBody = [];\n        for (var property in params) {\n          var encodedKey = encodeURIComponent(property);\n          var encodedValue = encodeURIComponent(params[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/authenticate\", {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }),\n          body: formBody\n        })\n        .then(res => {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Enjoy your token, ya filthy animal!\") {\n            RealmService.authenticate(data.token)\n            .then(user => {\n              auth.setSession(data.token, action.authData.email);\n              auth.setRealmUser(user);\n              dispatch(setUsername(action.authData.email));\n              dispatch(warning(\"Welcome! Hold on while we collect your recipes.\"));\n              dispatch(setRedirect(\"/\"));\n              //TODO: We don't need to pass a parameter. Should be able to get user\n              return dispatch(getRecipes(user.refresh_token));\n            })\n            .catch(error => {\n              dispatch(toggleLoader(false));\n              return dispatch(warning(\"Realm connect failed: \" + error.message));\n            });\n          }\n          else if (data.message === \"Email not verified.\") {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            return dispatch(warning(\"Check your email to verify your account.\"));\n          }\n          else {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            console.log(\"error: \", data);\n            return dispatch(warning(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          console.log(\"error: \", error.message);\n          return dispatch(warning(\"Auth failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function emailVerificationMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === VERIFY_EMAIL) {\n        dispatch(toggleLoader(true));\n        const endpoint = \"https://funky-radish-api.herokuapp.com/verify/\" + action.token\n\n        fetch(endpoint, { method: 'get' })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          console.log(\"fetch returned.\")\n          console.log(data)\n          dispatch(toggleLoader(false));\n          if ( data.message === \"Email verified.\") {\n            return dispatch(setVerified(\"Welcome to Funky Radish! You can now login from any device.\"));\n          }\n          else {\n            return dispatch(setVerified(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          return dispatch(setVerified(\"Verification failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function recipeLoadingMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === GET_RECIPES) {\n\n        dispatch(toggleLoader(true));\n        console.log(\"get recipes action called\")\n        return dispatch(warning(\"getting recipes\"))\n\n        // return fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n        //   method: 'get',\n        //   headers: new Headers({\n        //     'x-access-token': action.token\n        //   })\n        // })\n        // .then(response => response.json())\n        // .then(json => {\n        //   if (json.message) {\n        //     dispatch(warning(json.message))\n        //     dispatch(toggleLoader(false));\n        //     auth.setToken(\"\");\n        //     return dispatch(getToken());\n        //   }\n        //\n        //   let user = auth.getUser();\n        //   dispatch(setUsername(user));\n        //   dispatch(toggleLoader(false));\n        //\n        //   json.forEach(recipe => recipe.clientID = uuid());\n        //   return dispatch(recipesLoaded(json));\n        // })\n        // .catch(error => {\n        //   dispatch(toggleLoader(false));\n        //   return dispatch(warning(\"Recipe load failed.\"));\n        // });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function addRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === ADD_RECIPE) {\n        let token = auth.getToken();\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be saved.\"));\n        }\n\n        var date = new Date();\n        var formattedDate = moment.utc(date).format(\"YYYY-MM-DDTHH:mm:ss.sssz\").replace(/UTC/, \"Z\");\n\n        var params = {\n          ingredients: action.recipe.ingredients,\n          directions: action.recipe.directions,\n          updatedAt: formattedDate,\n          title: action.recipe.title,\n          clientID: action.recipe.clientID\n        }\n\n        if(action.recipe._id) {\n          let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + action.recipe._id;\n\n          fetch(url, {\n            method: 'put',\n            headers: new Headers({\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'x-access-token': token\n            }),\n            body: JSON.stringify(params)\n          })\n          .then(res=> {\n            return res.clone().json()\n          })\n          .then(data => {\n            if (data.message) {\n              return dispatch(warning(data.message))\n            }\n            return dispatch(updateRecipe(data));\n          })\n          .catch(error => dispatch(warning(error)))\n        }\n        else {\n          params = [params];\n\n          fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n            method: 'post',\n            headers: new Headers({\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'x-access-token': token\n            }),\n            body: JSON.stringify(params)\n          })\n          .then(res=> {\n            return res.clone().json()\n          })\n          .then(data => {\n            if (data.message) {\n              return dispatch(warning(data.message))\n            }\n            // update recipe to fill in ._id\n            return dispatch(updateRecipe(data));\n          })\n          .catch(error => dispatch(warning(error)))\n        }\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function getRecipeMiddleware({dispatch}) {\n  return function(next) {\n    return function(action) {\n      if (action.type === GET_RECIPE) {\n        fetch(\"https://funky-radish-api.herokuapp.com/recipes/\" + action.recipeTitle , {\n          method: 'get'\n        })\n        .then(response => response.json())\n        .then(json => {\n          if (json.message) {\n            dispatch(warning(json.message))\n            return dispatch(toggleLoader(false));\n          }\n          else {\n            return dispatch(setRecipe(json));\n          }\n        })\n        .catch(error => {\n          return dispatch(warning(\"I can't find that recipe.\"));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function deleteRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === DELETE_REMOTE_RECIPE) {\n\n        let token = auth.getToken();\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be removed.\"));\n        }\n\n        let id = action.recipe._id;\n        let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + id;\n\n        // call to delete recipe.\n        fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-access-token': token\n          })\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Recipe deleted successfully!\" || data.message === \"Authentication failed. Recipe not found.\") {\n            return dispatch(deleteLocalRecipe(action.recipe.clientID))\n          }\n          else {\n            return dispatch(warning(\"Delete failed.\"))\n          }\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function warningCycleMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === WARNING) {\n        setInterval(() => {\n          return dispatch(warningToggle());\n        }, 3000);\n      }\n      return next(action);\n    };\n  };\n}\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/SearchBar.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Menu.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/Auth.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Verification.js",["139"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\n\nimport { verifyEmail } from \"../actions/Actions\";\n\nexport class Verification extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token = props.match.params.token;\n\n    this.state = {\n      token: token || '',\n      verified: \"Just a moment while we verify your account...\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.verifyEmail(this.state.token);\n    // if(this.state.token.length > 0) {\n    //   this.props.verifyEmail(this.state.token);\n    // }\n  }\n\n  render() {\n\n    return (\n      <div className=\"verificationView\">\n        <b>{this.props.verified}</b>\n      </div>\n    );\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    verified: state.verified\n  };\n}\n\nexport default connect(mapStateToProps, { verifyEmail })(Verification);\n\n// export default Verification;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RecipeList.js",["140","141"],"import React from \"react\";\nimport useRecipes from \"../graphql/useRecipes\";\nimport { useRealmApp } from \"../RealmApp\";\n\nexport default function RecipeList() {\n\n  const app = useRealmApp();\n\n  const { recipes, loading, error } = useRecipes();\n\n  // const getTaskById = (id) => tasks.find((task) => task._id === id);\n  // const [selectedTaskId, setSelectedTaskId] = React.useState(null);\n  // const selectedTask = getTaskById(selectedTaskId);\n  //\n  // const {\n  //   draftTask,\n  //   createDraftTask,\n  //   deleteDraftTask,\n  //   setDraftTaskName,\n  //   submitDraftTask,\n  // } = useDraftTask({ addTask });\n\n  return loading ? (\n      <div>\n        Loading\n      </div>\n    ) : (\n      <div>\n        {recipes.length === 0 ? (\n          <div>\n            <h1>No Recipes</h1>\n          </div>\n        ) : (\n          recipes.map((recipe) => (\n            <div key={recipe._id}>\n              {recipe.title}\n            </div>\n          ))\n        )}\n      </div>\n  );\n}\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/useRecipes.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/RealmApp.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/RealmApolloProvider.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/RealmService.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/api.js",[],{"ruleId":"142","severity":1,"message":"143","line":1,"column":1,"nodeType":"144","messageId":"145","endLine":1,"endColumn":14,"fix":"146"},{"ruleId":"147","severity":1,"message":"148","line":17,"column":10,"nodeType":"149","messageId":"150","endLine":17,"endColumn":21},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"147","severity":1,"message":"155","line":2,"column":27,"nodeType":"149","messageId":"150","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"156","line":2,"column":42,"nodeType":"149","messageId":"150","endLine":2,"endColumn":46},{"ruleId":"147","severity":1,"message":"157","line":24,"column":10,"nodeType":"149","messageId":"150","endLine":24,"endColumn":27},{"ruleId":"147","severity":1,"message":"158","line":21,"column":3,"nodeType":"149","messageId":"150","endLine":21,"endColumn":16},{"ruleId":"147","severity":1,"message":"159","line":29,"column":15,"nodeType":"149","messageId":"150","endLine":29,"endColumn":19},{"ruleId":"147","severity":1,"message":"160","line":34,"column":7,"nodeType":"149","messageId":"150","endLine":34,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":96,"column":28,"nodeType":"163","messageId":"164","endLine":96,"endColumn":30},{"ruleId":"147","severity":1,"message":"165","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"166","line":7,"column":9,"nodeType":"149","messageId":"150","endLine":7,"endColumn":12},{"ruleId":"147","severity":1,"message":"167","line":9,"column":29,"nodeType":"149","messageId":"150","endLine":9,"endColumn":34},"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"168","text":"169"},"no-unused-vars","'useRealmApp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'Router' is defined but never used.","'Link' is defined but never used.","'initializeReactGA' is defined but never used.","'recipesLoaded' is defined but never used.","'uuid' is defined but never used.","'realmService' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","'app' is assigned a value but never used.","'error' is assigned a value but never used.",[0,13],"","no-global-assign","no-unsafe-negation"]