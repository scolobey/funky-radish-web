[{"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/index.js":"1","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/stateLoader.js":"2","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/App.js":"3","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/serviceWorker.js":"4","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/store/index.js":"5","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/actions/Actions.js":"6","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipes.js":"7","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipe.js":"8","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Navigation.js":"9","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/About.js":"10","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Builder.js":"11","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Warning.js":"12","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/PrivacyPolicy.js":"13","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Loader.js":"14","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/AuthView.js":"15","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RoadMap.js":"16","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Redirector.js":"17","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/reducers/index.js":"18","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/action-types.js":"19","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/middleware/index.js":"20","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/SearchBar.js":"21","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Menu.js":"22","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/Auth.js":"23","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Verification.js":"24","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RecipeList.js":"25","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/useRecipes.js":"26","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/RealmApp.js":"27","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/RealmApolloProvider.js":"28","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/RealmService.js":"29","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/api.js":"30","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Support.js":"31","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Admin.js":"32","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Graph.js":"33","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Importer.js":"34","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Recipes.js":"35","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Users.js":"36","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/models/RecipeModel.js":"37","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/ServerService.js":"38"},{"size":1507,"mtime":1621192378389,"results":"39","hashOfConfig":"40"},{"size":952,"mtime":1561992866483,"results":"41","hashOfConfig":"40"},{"size":2407,"mtime":1621200642429,"results":"42","hashOfConfig":"40"},{"size":4948,"mtime":1559933922204,"results":"43","hashOfConfig":"40"},{"size":1078,"mtime":1624152695925,"results":"44","hashOfConfig":"40"},{"size":2821,"mtime":1624731786658,"results":"45","hashOfConfig":"40"},{"size":3443,"mtime":1624733618525,"results":"46","hashOfConfig":"40"},{"size":1674,"mtime":1610921923210,"results":"47","hashOfConfig":"40"},{"size":1104,"mtime":1610921919806,"results":"48","hashOfConfig":"40"},{"size":836,"mtime":1621192378384,"results":"49","hashOfConfig":"40"},{"size":3203,"mtime":1610921923209,"results":"50","hashOfConfig":"40"},{"size":492,"mtime":1561959529670,"results":"51","hashOfConfig":"40"},{"size":5888,"mtime":1610921923209,"results":"52","hashOfConfig":"40"},{"size":1082,"mtime":1561959529667,"results":"53","hashOfConfig":"40"},{"size":1876,"mtime":1621192378384,"results":"54","hashOfConfig":"40"},{"size":544,"mtime":1559933922199,"results":"55","hashOfConfig":"40"},{"size":504,"mtime":1561959529669,"results":"56","hashOfConfig":"40"},{"size":3264,"mtime":1624733601040,"results":"57","hashOfConfig":"40"},{"size":1324,"mtime":1624153365175,"results":"58","hashOfConfig":"40"},{"size":15141,"mtime":1624731704615,"results":"59","hashOfConfig":"40"},{"size":3574,"mtime":1625511746163,"results":"60","hashOfConfig":"40"},{"size":1588,"mtime":1621200857520,"results":"61","hashOfConfig":"40"},{"size":1055,"mtime":1621192378382,"results":"62","hashOfConfig":"40"},{"size":952,"mtime":1611002307912,"results":"63","hashOfConfig":"40"},{"size":643,"mtime":1624721157917,"results":"64","hashOfConfig":"40"},{"size":841,"mtime":1621192378388,"results":"65","hashOfConfig":"40"},{"size":1281,"mtime":1621192378383,"results":"66","hashOfConfig":"40"},{"size":1431,"mtime":1621192378388,"results":"67","hashOfConfig":"40"},{"size":1950,"mtime":1621192378391,"results":"68","hashOfConfig":"40"},{"size":172,"mtime":1624741078183,"results":"69","hashOfConfig":"40"},{"size":533,"mtime":1621192378386,"results":"70","hashOfConfig":"40"},{"size":606,"mtime":1621200828985,"results":"71","hashOfConfig":"40"},{"size":266,"mtime":1621200840404,"results":"72","hashOfConfig":"40"},{"size":1135,"mtime":1624152659730,"results":"73","hashOfConfig":"40"},{"size":274,"mtime":1621200720411,"results":"74","hashOfConfig":"40"},{"size":266,"mtime":1621200724338,"results":"75","hashOfConfig":"40"},{"size":4211,"mtime":1623678594574,"results":"76","hashOfConfig":"40"},{"size":2493,"mtime":1624731416315,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80","usedDeprecatedRules":"81"},"pzh3uy",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"81"},"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/index.js",["165","166"],"\"use strict\";\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport RealmApolloProvider from \"./graphql/RealmApolloProvider\";\nimport { useRealmApp, RealmAppProvider } from \"./RealmApp\";\n\nimport store from \"./store/index\";\nimport throttle from \"lodash/throttle\";\nimport { saveState } from './stateLoader.js';\nimport { addRecipe } from \"./actions/Actions\";\n\n// export const APP_ID = \"funky_radish_app-aarlp\";\nexport const APP_ID = \"funky-radish-twdxv\";\n\n\nstore.subscribe(throttle(() => {\n  saveState({\n    recipes: store.getState().recipes,\n    filteredRecipes: store.getState().recipes,\n    warnings: []\n  });\n}, 1000));\n\nwindow.store = store;\nwindow.addRecipe = addRecipe;\n\nReactDOM.render(\n  <RealmAppProvider appId={APP_ID}>\n    <RealmApolloProvider>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </RealmApolloProvider>\n  </RealmAppProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["167","168"],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/stateLoader.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/App.js",["169","170","171"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\n\nimport Navigation from './components/Navigation';\n\nimport Admin from './components/admin/Admin';\nimport ImporterAdmin from './components/admin/Importer';\nimport GraphAdmin from './components/admin/Graph';\nimport RecipesAdmin from './components/admin/Recipes';\nimport UsersAdmin from './components/admin/Users';\n\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport RoadMap from './components/RoadMap';\nimport About from './components/About';\nimport Support from './components/Support';\nimport Builder from \"./components/Builder\";\nimport Recipes from \"./components/Recipes.js\";\nimport Recipe from \"./components/Recipe.js\";\nimport Verification from './components/Verification.js';\n\nimport AuthView from './components/AuthView';\nimport Loader from \"./components/Loader\";\nimport Warning from \"./components/Warning\";\nimport Redirector from './components/Redirector';\n\nimport './App.css';\n\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-141908035-1');\n    ReactGA.pageview('/');\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Loader />\n        <Redirector />\n        <Warning />\n\n        <div className=\"content\">\n          <Route path=\"/\" exact component={Recipes} />\n          <Route path=\"/login/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/signup/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/about/\" exact component={About} />\n          <Route path=\"/support/\" exact component={Support} />\n          <Route path=\"/roadmap/\" component={RoadMap} />\n          <Route path=\"/privacy/\" component={PrivacyPolicy} />\n          <Route path=\"/verify/:token?\" component={Verification} />\n          <Route path=\"/builder/:clientID?\" component={Builder} />\n          <Route path=\"/recipes/:recipeTitle?\" component={Recipe} />\n          <Route path=\"/admin/\" component={Admin} />\n          <Route path=\"/admin/importer\" component={ImporterAdmin} />\n          <Route path=\"/admin/graph\" component={GraphAdmin} />\n          <Route path=\"/admin/recipes\" component={RecipesAdmin} />\n          <Route path=\"/admin/users\" component={UsersAdmin} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/serviceWorker.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/store/index.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/actions/Actions.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipes.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Recipe.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Navigation.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/About.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Builder.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Warning.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/PrivacyPolicy.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Loader.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/AuthView.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RoadMap.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Redirector.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/reducers/index.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/action-types.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/middleware/index.js",["172","173","174","175","176","177"],"import {\n  ADD_RECIPE,\n  GET_TOKEN,\n  GET_RECIPES,\n  VERIFY_EMAIL,\n  DELETE_REMOTE_RECIPE,\n  LOGIN,\n  SIGNUP,\n  WARNING,\n  GET_RECIPE,\n  EXTERNAL_RECIPE_SEARCH,\n  AUTOCOMPLETE\n} from \"../constants/action-types\";\n\nimport {\n  getRecipes,\n  updateRecipe,\n  deleteLocalRecipe,\n  authFailed,\n  getToken,\n  setVerified,\n  warning,\n  recipesLoaded,\n  setUsername,\n  toggleLoader,\n  warningToggle,\n  setRedirect,\n  setRecipe,\n  importRecipes,\n  setImportQueue,\n  setSearchSuggestions\n} from \"../actions/Actions\";\n\nimport {v1 as uuid} from \"uuid\";\n\nimport Auth from '../Auth'\nimport RealmService from '../services/RealmService'\nimport ServerService from '../services/ServerService'\nimport Recipe from '../models/RecipeModel'\nconst auth = new Auth();\nconst realmService = new RealmService();\nconst serverService = new ServerService();\n\nvar moment = require('moment');\n\nexport function loginMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === LOGIN) {\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            return dispatch(getToken({email: action.user.email, password: action.user.password}));\n          case 2:\n            return dispatch(warning('Invalid password.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function signupMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === SIGNUP) {\n\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            break;\n          case 2:\n            return dispatch(warning('Password needs 8 characters and a number.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n\n        var params = {\n          email: action.user.email,\n          password: action.user.password\n        };\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/users\", {\n          method: 'post',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Verification email sent.\") {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(\"Check your email for a link to help complete your signup.\"))\n          } else {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          dispatch(toggleLoader(false));\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function tokenCollectionMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === GET_TOKEN) {\n        // let token = auth.getToken();\n        //\n        // if (token) {\n        //   return dispatch(getRecipes(token));\n        // }\n\n        if (!action.authData) {\n          return dispatch(authFailed(\"not logged in.\"));\n        }\n\n        var params = {\n          email: action.authData.email,\n          password: action.authData.password\n        };\n\n        var formBody = [];\n        for (var property in params) {\n          var encodedKey = encodeURIComponent(property);\n          var encodedValue = encodeURIComponent(params[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/authenticate\", {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }),\n          body: formBody\n        })\n        .then(res => {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Enjoy your token, ya filthy animal!\") {\n            realmService.authenticate(data.token)\n            .then(user => {\n              auth.setSession(data.token, action.authData.email);\n              auth.setRealmUser(user);\n              dispatch(setUsername(action.authData.email));\n              dispatch(warning(\"Welcome! Hold on while we collect your recipes.\"));\n              dispatch(toggleLoader(false));\n              //TODO: We don't need to pass a parameter. Should be able to get user\n              return dispatch(setRedirect(\"/\"));\n            })\n            .catch(error => {\n              dispatch(toggleLoader(false));\n              return dispatch(warning(\"Realm connect failed: \" + error.message));\n            });\n          }\n          else if (data.message === \"Email not verified.\") {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            return dispatch(warning(\"Check your email to verify your account.\"));\n          }\n          else {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            console.log(\"error: \", data);\n            return dispatch(warning(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          console.log(\"error: \", error.message);\n          return dispatch(warning(\"Auth failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function emailVerificationMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === VERIFY_EMAIL) {\n        dispatch(toggleLoader(true));\n        const endpoint = \"https://funky-radish-api.herokuapp.com/verify/\" + action.token\n\n        fetch(endpoint, { method: 'get' })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          console.log(\"fetch returned.\")\n          console.log(data)\n          dispatch(toggleLoader(false));\n          if ( data.message === \"Email verified.\") {\n            return dispatch(setVerified(\"Welcome to Funky Radish! You can now login from any device.\"));\n          }\n          else {\n            return dispatch(setVerified(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          return dispatch(setVerified(\"Verification failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function recipeLoadingMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === GET_RECIPES) {\n\n        dispatch(toggleLoader(true));\n        console.log(\"get recipes action called\")\n        dispatch(toggleLoader(false));\n        return dispatch(warning(\"getting recipes\"))\n\n        // return fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n        //   method: 'get',\n        //   headers: new Headers({\n        //     'x-access-token': action.token\n        //   })\n        // })\n        // .then(response => response.json())\n        // .then(json => {\n        //   if (json.message) {\n        //     dispatch(warning(json.message))\n        //     dispatch(toggleLoader(false));\n        //     auth.setToken(\"\");\n        //     return dispatch(getToken());\n        //   }\n        //\n        //   let user = auth.getUser();\n        //   dispatch(setUsername(user));\n        //   dispatch(toggleLoader(false));\n        //\n        //   json.forEach(recipe => recipe.clientID = uuid());\n        //   return dispatch(recipesLoaded(json));\n        // })\n        // .catch(error => {\n        //   dispatch(toggleLoader(false));\n        //   return dispatch(warning(\"Recipe load failed.\"));\n        // });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function addRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === ADD_RECIPE) {\n        let token = auth.getToken();\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be saved.\"));\n        }\n\n        var date = new Date();\n        var formattedDate = moment.utc(date).format(\"YYYY-MM-DDTHH:mm:ss.sssz\").replace(/UTC/, \"Z\");\n\n        var params = {\n          ingredients: action.recipe.ingredients,\n          directions: action.recipe.directions,\n          updatedAt: formattedDate,\n          title: action.recipe.title,\n          clientID: action.recipe.clientID\n        }\n\n        if(action.recipe._id) {\n          let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + action.recipe._id;\n\n          fetch(url, {\n            method: 'put',\n            headers: new Headers({\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'x-access-token': token\n            }),\n            body: JSON.stringify(params)\n          })\n          .then(res=> {\n            return res.clone().json()\n          })\n          .then(data => {\n            if (data.message) {\n              return dispatch(warning(data.message))\n            }\n            return dispatch(updateRecipe(data));\n          })\n          .catch(error => dispatch(warning(error)))\n        }\n        else {\n          params = [params];\n\n          fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n            method: 'post',\n            headers: new Headers({\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'x-access-token': token\n            }),\n            body: JSON.stringify(params)\n          })\n          .then(res=> {\n            return res.clone().json()\n          })\n          .then(data => {\n            if (data.message) {\n              return dispatch(warning(data.message))\n            }\n            // update recipe to fill in ._id\n            return dispatch(updateRecipe(data));\n          })\n          .catch(error => dispatch(warning(error)))\n        }\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function getRecipeMiddleware({dispatch}) {\n  return function(next) {\n    return function(action) {\n      if (action.type === GET_RECIPE) {\n        fetch(\"https://funky-radish-api.herokuapp.com/recipes/\" + action.recipeTitle , {\n          method: 'get'\n        })\n        .then(response => response.json())\n        .then(json => {\n          if (json.message) {\n            dispatch(warning(json.message))\n            return dispatch(toggleLoader(false));\n          }\n          else {\n            return dispatch(setRecipe(json));\n          }\n        })\n        .catch(error => {\n          return dispatch(warning(\"I can't find that recipe.\"));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function deleteRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === DELETE_REMOTE_RECIPE) {\n\n        let token = auth.getToken();\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be removed.\"));\n        }\n\n        let id = action.recipe._id;\n        let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + id;\n\n        // call to delete recipe.\n        fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-access-token': token\n          })\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Recipe deleted successfully!\" || data.message === \"Authentication failed. Recipe not found.\") {\n            return dispatch(deleteLocalRecipe(action.recipe.clientID))\n          }\n          else {\n            return dispatch(warning(\"Delete failed.\"))\n          }\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function warningCycleMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === WARNING) {\n        setInterval(() => {\n          return dispatch(warningToggle());\n        }, 3000);\n      }\n      return next(action);\n    };\n  };\n}\n\n// export function importRecipesMiddleware({ dispatch }) {\n//   return function(next) {\n//     return function(action) {\n//       if (action.type === IMPORT_RECIPES) {\n//         console.log(\"importing recipes - query: \" + action.query)\n//\n//         dispatch(toggleLoader(true));\n//         const endpoint = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=baf6ca65c5e6461cbdb8f3cc87e1a730&query=\" + action.query\n//\n//         fetch(endpoint, { method: 'get' })\n//         .then(res=> {\n//           return res.clone().json()\n//         })\n//         .then(data => {\n//           //handle overloaded api code.\n//\n//           console.log(\"fetch returned.\")\n//\n//           data.results.forEach(myFunction);\n//\n//           function myFunction(value, index, array) {\n//             var rec = new Recipe(value.title)\n//             console.log(rec.title)\n//             console.log(value.title)\n//           }\n//\n//\n//\n//           dispatch(toggleLoader(false));\n//           // if ( data.message === \"Email verified.\") {\n//           //   return dispatch(setVerified(\"Welcome to Funky Radish! You can now login from any device.\"));\n//           // }\n//           // else {\n//           //   return dispatch(setVerified(data.message));\n//           // }\n//         })\n//         .catch(error => {\n//           dispatch(toggleLoader(false));\n//           return dispatch(setVerified(\"Verification failed: \" + error.message));\n//         });\n//\n//         // dispatch(setImportQueue([\"coookies\", \"butter\"]));\n//       }\n//       return next(action);\n//     };\n//   };\n// }\n\nexport function externalSearchMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === EXTERNAL_RECIPE_SEARCH) {\n        // dispatch(toggleLoader(true))\n\n        serverService.searchRecipes(action.query)\n        .then(res=> {\n          console.log(\"recipes: \", res.recipes)\n          // dispatch(toggleLoader(false))\n          return dispatch(recipesLoaded(res.recipes))\n        })\n        .catch(err => {\n          // dispatch(toggleLoader(false))\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function autocompleteMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === AUTOCOMPLETE) {\n        if (action.query == \"\") {\n          return dispatch(setSearchSuggestions([]))\n        }\n\n        serverService.searchAutocomplete(action.query)\n        .then(res=> {\n          return dispatch(setSearchSuggestions(res.suggestions))\n        })\n        .catch(err => {\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n      return next(action);\n    };\n  };\n}\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/SearchBar.js",["178"],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Menu.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/Auth.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Verification.js",["179"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\n\nimport { verifyEmail } from \"../actions/Actions\";\n\nexport class Verification extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token = props.match.params.token;\n\n    this.state = {\n      token: token || '',\n      verified: \"Just a moment while we verify your account...\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.verifyEmail(this.state.token);\n    // if(this.state.token.length > 0) {\n    //   this.props.verifyEmail(this.state.token);\n    // }\n  }\n\n  render() {\n\n    return (\n      <div className=\"verificationView\">\n        <b>{this.props.verified}</b>\n      </div>\n    );\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    verified: state.verified\n  };\n}\n\nexport default connect(mapStateToProps, { verifyEmail })(Verification);\n\n// export default Verification;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/RecipeList.js",["180"],"import React from \"react\";\nimport useRecipes from \"../graphql/useRecipes\";\nimport { useRealmApp } from \"../RealmApp\";\n\nexport default function RecipeList() {\n\n  const app = useRealmApp();\n  const { loading, data } = useRecipes();\n\n  if(data) {\n    console.log(\"hereweare: \" + data.recipes)\n  }\n\n  return loading ? (\n      <div>\n        Loading\n      </div>\n    ) : (\n      <div>\n      { !data?.recipes ? (\n        <div>\n          <h1>No Recipes</h1>\n        </div>\n      ) : (\n          data.recipes.map((recipe) => (\n            <div key={recipe._id}>\n              {recipe.title}\n            </div>\n          ))\n      )}\n      </div>\n  );\n}\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/useRecipes.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/RealmApp.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/graphql/RealmApolloProvider.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/RealmService.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/constants/api.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/Support.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Admin.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Graph.js",["181"],"import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass GraphAdmin extends Component {\n  render() {\n    return (\n      <div className=\"GraphAdminContainer\">\n        <h1>Graph</h1>\n      </div>\n    );\n  }\n}\n\nexport default GraphAdmin;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Importer.js",["182"],"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Recipe from \"../../components/Recipe.js\";\n\nimport { externalRecipeSearch } from \"../../actions/Actions\";\n\nclass ImporterAdmin extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n      importQueue: []\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  onChange = (event) => {\n    event.preventDefault();\n    console.log(event.target.value)\n\n    this.setState({ query: event.target.value })\n  }\n\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.externalRecipeSearch(this.state.query)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <form>\n          <input type=\"text\" onChange={this.onChange} placeholder=\"Query..\"/>\n          <button type=\"import\" onClick={this.handleClick}>Search</button>\n        </form>\n\n      </div>\n    )\n\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    importQueue: state.importQueue\n  };\n}\n\nexport default connect(mapStateToProps, { externalRecipeSearch })(ImporterAdmin);\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Recipes.js",["183"],"import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass RecipesAdmin extends Component {\n  render() {\n    return (\n      <div className=\"RecipesAdminContainer\">\n        <h1>Recipes</h1>\n      </div>\n    );\n  }\n}\n\nexport default RecipesAdmin;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/components/admin/Users.js",["184"],"import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass UsersAdmin extends Component {\n  render() {\n    return (\n      <div className=\"UsersAdminContainer\">\n        <h1>Users</h1>\n      </div>\n    );\n  }\n}\n\nexport default UsersAdmin;\n","/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/models/RecipeModel.js",[],"/Users/Ryan/Desktop/Projects/javascript/funky-radish-web/src/services/ServerService.js",["185","186"],"import { BASE_URL } from \"../constants/api\";\nvar path = require('path');\n\nexport default class ServerService {\n\n  async searchRecipes(query) {\n    let endpoint = BASE_URL + \"collector?query=\" + query\n\n    console.log(endpoint)\n\n    let response = await fetch(endpoint, { method: 'get' })\n\n    let data = await response.json()\n    return data;\n  }\n\n  async searchAutocomplete(query) {\n    let endpoint = BASE_URL + \"collector/autocomplete?query=\" + query\n\n    let response = await fetch(endpoint, { method: 'get' })\n\n    let data = await response.json()\n    return data;\n  }\n\n\n\n\n\n\n\n  async createUser(user) {\n    var params = {\n      name: user.username,\n      email: user.email,\n      password: user.password,\n      admin: false,\n      recipes: []\n    };\n\n    let endpoint = \"/users\"\n\n    let response = await fetch(endpoint, {\n      method: 'post',\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(params)\n    })\n    .catch(err => {\n      console.log('Error: ' + err)\n      return\n    })\n\n    let data = await response.json()\n    return data;\n  }\n\n  async loginUser(user) {\n\n    var params = {\n      email: user.email,\n      password: user.password\n    };\n\n    let endpoint = \"/authenticate\"\n\n    let response = await fetch(endpoint, {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n      body: JSON.stringify(params)\n    })\n    .catch(err => {\n      console.log('Error: ' + err)\n      return\n    })\n\n    let data = await response.json()\n    return data;\n  }\n\n}\n\nfunction fetchWithTimeout(endpoint) {\n  const FETCH_TIMEOUT = 8000;\n  let didTimeOut = false;\n\n  return new Promise(function(resolve, reject) {\n    const timeout = setTimeout(function() {\n      didTimeOut = true;\n      reject(new Error('Request timed out'));\n    }, FETCH_TIMEOUT);\n\n    fetch(endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(function(response) {\n        // Clear the timeout as cleanup\n        clearTimeout(timeout);\n        if(!didTimeOut) {\n          console.log('fetch successfull: ', response);\n          resolve(response);\n        }\n      })\n      .catch(function(err) {\n          console.log('fetch failed: ', err);\n          // Rejection already happened with setTimeout\n          if(didTimeOut) return;\n          // Reject with error\n          reject(err);\n      });\n  })\n}\n",{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","endLine":1,"endColumn":14,"fix":"191"},{"ruleId":"192","severity":1,"message":"193","line":17,"column":10,"nodeType":"194","messageId":"195","endLine":17,"endColumn":21},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"192","severity":1,"message":"200","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":33},{"ruleId":"192","severity":1,"message":"201","line":2,"column":42,"nodeType":"194","messageId":"195","endLine":2,"endColumn":46},{"ruleId":"192","severity":1,"message":"202","line":31,"column":10,"nodeType":"194","messageId":"195","endLine":31,"endColumn":27},{"ruleId":"192","severity":1,"message":"203","line":16,"column":3,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"204","line":29,"column":3,"nodeType":"194","messageId":"195","endLine":29,"endColumn":16},{"ruleId":"192","severity":1,"message":"205","line":30,"column":3,"nodeType":"194","messageId":"195","endLine":30,"endColumn":17},{"ruleId":"192","severity":1,"message":"206","line":34,"column":15,"nodeType":"194","messageId":"195","endLine":34,"endColumn":19},{"ruleId":"192","severity":1,"message":"207","line":39,"column":8,"nodeType":"194","messageId":"195","endLine":39,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":506,"column":26,"nodeType":"210","messageId":"211","endLine":506,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":112,"column":20,"nodeType":"210","messageId":"211","endLine":112,"endColumn":22},{"ruleId":"192","severity":1,"message":"212","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":20},{"ruleId":"192","severity":1,"message":"213","line":7,"column":9,"nodeType":"194","messageId":"195","endLine":7,"endColumn":12},{"ruleId":"192","severity":1,"message":"214","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"207","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":14},{"ruleId":"192","severity":1,"message":"214","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"214","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"215","line":2,"column":5,"nodeType":"194","messageId":"195","endLine":2,"endColumn":9},{"ruleId":"192","severity":1,"message":"216","line":87,"column":10,"nodeType":"194","messageId":"195","endLine":87,"endColumn":26},"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"217","text":"218"},"no-unused-vars","'useRealmApp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["219"],"no-negated-in-lhs",["220"],"'Router' is defined but never used.","'Link' is defined but never used.","'initializeReactGA' is defined but never used.","'getRecipes' is defined but never used.","'importRecipes' is defined but never used.","'setImportQueue' is defined but never used.","'uuid' is defined but never used.","'Recipe' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","'app' is assigned a value but never used.","'Helmet' is defined but never used.","'path' is assigned a value but never used.","'fetchWithTimeout' is defined but never used.",[0,13],"","no-global-assign","no-unsafe-negation"]