{"version":3,"sources":["constants/action-types.js","Auth.js","constants/api.js","services/RealmService.js","graphql/RealmApolloProvider.js","components/Menu.js","components/SearchBar.js","components/Navigation.js","components/admin/Admin.js","components/admin/Graph.js","graphql/useRecipes.js","components/admin/Recipes.js","components/admin/Users.js","components/PrivacyPolicy.js","components/RoadMap.js","components/About.js","components/Support.js","graphql/useRecipeMutations.js","graphql/useNewRecipe.js","graphql/useRecipe.js","services/SVGService.js","services/ServerService.js","components/Builder.js","components/admin/Importer.js","components/RecipeList.js","components/RecipeRequestView.js","components/ExternalRecipeList.js","components/Recipes.js","components/Popover.js","components/Recipe.js","graphql/editRecipe.js","components/MyRecipe.js","components/Verification.js","components/RecipeClaimer.js","components/AuthView.js","components/ChangePasswordView.js","components/Warning.js","components/Redirector.js","components/Minter.js","App.js","serviceWorker.js","reducers/index.js","middleware/index.js","stateLoader.js","store/index.js","index.js","actions/Actions.js","components/Loader.js"],"names":["GET_RECIPES","ADD_RECIPE","UPDATE_RECIPE","RECIPES_LOADED","EXTERNAL_RECIPES_LOADED","CLEAR_RECIPES","SET_RECIPE","DELETE_REMOTE_RECIPE","DELETE_LOCAL_RECIPE","LOGIN","SIGNUP","GET_TOKEN","LOGOUT","AUTH_FAILED","VERIFY_EMAIL","SET_VERIFIED","CREATE_USER","WARNING","SET_USERNAME","TOGGLE_MENU","TOGGLE_LOADER","WARNING_TOGGLE","SET_REDIRECT","GET_RECIPE","SEARCH","SET_IMPORT_QUEUE","EXTERNAL_RECIPE_SEARCH","AUTOCOMPLETE","SET_SEARCH_SUGGESTIONS","GRAPHQL","IMPORT_RECIPE","SET_DRAFT_RECIPE","UPDATE_USER_RECORD","SEND_PASSWORD_RESET_EMAIL","CHANGE_PASSWORD","RESEND_VERIFICATION","CLAIM_RECIPE","REQUEST_RECIPE","Auth","setSession","token","user","localStorage","setItem","setRealmUser","realmUser","JSON","stringify","id","getRealmUser","console","log","getItem","setToken","logout","removeItem","getToken","getUser","validateCredentials","email","password","emailRegex","test","validatePassword","BASE_URL","realmApp","Realm","RealmService","authenticate","credentials","jwt","logIn","getRealm","logoutRealm","currentUser","removeUser","realmService","RealmApolloContext","React","createContext","RealmApolloProvider","children","useState","app","link","HttpLink","uri","fetch","options","a","Error","refreshCustomData","headers","Authorization","accessToken","cache","InMemoryCache","ApolloClient","createRealmApolloClient","client","setClient","setCurrentUser","useEffect","wrapped","Provider","value","ApolloProvider","auth","Menu","props","state","menu","handleLogout","bind","event","preventDefault","this","context","setUsername","clearRecipes","toggleMenu","className","customData","href","onClick","renderUserState","Component","contextType","connect","SearchBar","suggestions","cursor","throttleHandleChange","debounce","handleChange","handleKeyDown","searchRef","createRef","search","target","keyCode","externalRecipeSearch","replace","window","location","pathname","setRedirect","setSearchSuggestions","setState","length","src","height","alt","type","placeholder","onChange","onKeyDown","ref","autocomplete","Navigation","e","stopPropagation","srcset","Admin","Helmet","charSet","GraphAdmin","useRecipes","author","watching","RECIPE_QUERY","gql","useQuery","variables","onCompleted","loading","error","data","useAllRecipesInProject","query","dispatch","useDispatch","warning","message","rec","recipes","filter","recipe","title","toLowerCase","includes","map","to","_id","toString","UsersAdmin","PrivacyPolicy","rel","RoadMap","About","name","content","Support","useRecipeMutations","addRecipe","useAddRecipe","updateRecipe","useUpdateRecipe","deleteRecipe","useDeleteRecipe","AddRecipeMutation","UpdateRecipeMutation","DeleteRecipeMutation","RecipeFieldsFragment","useMutation","update","addedRecipe","modify","fields","existingRecipes","writeFragment","fragment","addRecipeMutation","updateRecipeMutation","recipeId","oldIngredients","oldDirections","updates","updatedRecipe","deleteRecipeMutation","ingredients","create","ing","directions","dir","deletedRecipe","useNewRecipe","useRecipe","recId","skip","useRecipeInProject","splitLines","text","maxLength","index","splitIndex","substring","trim","splitMultipleLines","splitText","remainingText","splitSection","push","require","ServerService","recipeID","endpoint","method","Headers","response","json","address","encoded","encodeURIComponent","Promise","resolve","reject","setTimeout","then","catch","err","params","username","admin","body","svgService","generate","fulfill","titleSection","y","ingredientSection","ingElement","ingSplit","shift","ingSplice","join","dirCount","z","image","dirElement","dirSplit","dirSplice","serverService","currentRealmUser","fullRealmUser","parse","newID","ObjectId","Builder","recipeIdentification","match","useSelector","redirect","draftRecipe","setDraftRecipe","baseIngredients","setBaseIngredients","baseDirections","setBaseDirections","importAddress","setImportAddress","recipeInProgress","setRecipeInProgress","toggleLoader","draftRecipeIngredients","ingredientListing","dataRecipeIngredients","ingListing","draftRecipeDirections","directionListing","dataRecipeDirections","dirListing","dirObject","split","directionText","ingObject","ingredientName","setDraftRecipeComplete","ingList","dirList","resetDraftRecipe","submitDraftRecipe","resp","submitDeleteRecipe","confirm","obj","createDraftRecipe","deleteDraftRecipe","setDraftRecipeTitle","setDraftRecipeIngredients","setDraftRecipeDirections","importFromAddress","importRecipe","res","mintNFT","useDraftRecipe","onSubmit","communalRealmUser","list","RecipeRequestView","setQuery","setEmail","em","qu","payload","requestRecipe","for","ExternalRecipeListView","externalRecipes","handleClick","replaceAll","Recipes","recipeQuery","filteredRecipes","ExternalRecipeList","media","withRouter","Popover","textAreaRef","useRef","copySuccess","setCopySuccess","dismiss","url","defaultValue","document","queryCommandSupported","current","select","execCommand","focus","Recipe","recipeIdentifier","recipeTitle","popoverActive","setPopoverActive","shareLink","setShareLink","getRecipe","generateRecipeToken","ingredient","direction","MyRecipe","active","setActive","Loader","loader","Verification","verified","verifyEmail","RecipeClaimer","setRecipeToken","recipeAccepted","setRecipeAccepted","member","claimRecipe","AuthView","clearFields","resendVerification","emailPrompt","prompt","forgotPassword","sendPasswordResetEmail","login","signup","toggleMode","ChangePasswordView","newPassword","setNewPassword","changePassword","Warning","warnings","Redirector","color","red","green","blue","alpha","CONTRACT_ADDRESS","Minter","setImage","pickerOpened","setPickerOpened","colorAttrs","setColorAttrs","setCurrentAccount","miningInProgress","setMiningInProgress","minterRecipe","setMinterRecipe","colorAttributes","style","newImage","createNFT","ethereum","request","accounts","account","setupEventListener","checkNetwork","askContractToMintNft","connectWallet","chainId","alert","provider","ethers","providers","Web3Provider","signer","getSigner","Contract","myRecipeNFT","abi","on","from","tokenId","toNumber","connectedContract","finalImage","makeARecipeNFT","nftTxn","wait","hash","initialImage","width","onStartChange","onEndChange","frameBorder","class","allowFullScreen","App","path","exact","component","Importer","RecipesAdmin","Boolean","hostname","rootReducer","action","Object","assign","concat","recList","recipeObject","elementPos","clientID","indexOf","verificationMessage","recipeList","slice","importQueue","queue","moment","initializeState","persistedState","serializedState","undefined","initialState","loadState","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","authData","authFailed","claimRecipeToken","formBody","property","encodedKey","encodedValue","clone","keys","userPayload","updateUserRecord","setVerified","date","Date","utc","format","setRecipe","deleteLocalRecipe","setInterval","warningToggle","externalRecipesLoaded","searchRecipes","searchAutocomplete","newRecID","protoRecipe","_profile","identities","thunk","APP_ID","subscribe","throttle","saveState","getState","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a0a9bb2.chunk.js","sourcesContent":["\n// Recipes\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const ADD_RECIPE = 'ADD_RECIPE';\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE';\nexport const RECIPES_LOADED = 'RECIPES_LOADED';\nexport const EXTERNAL_RECIPES_LOADED = 'EXTERNAL_RECIPES_LOADED';\nexport const CLEAR_RECIPES = 'CLEAR_RECIPES';\nexport const SET_RECIPE = 'SET_RECIPE';\nexport const DELETE_REMOTE_RECIPE = 'DELETE_REMOTE_RECIPE';\nexport const DELETE_LOCAL_RECIPE = 'DELETE_LOCAL_RECIPE';\n\n// Authentication\nexport const LOGIN = 'LOGIN';\nexport const SIGNUP = 'SIGNUP';\nexport const GET_TOKEN = 'GET_TOKEN';\nexport const LOGOUT = 'LOGOUT';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const TOKEN_STORED = 'TOKEN_STORED';\nexport const VERIFY_EMAIL = 'VERIFY_EMAIL';\nexport const SET_VERIFIED = 'SET_VERIFIED';\n\nexport const CREATE_USER = 'CREATE_USER';\nexport const OPEN_MENU = 'OPEN_MENU';\n\nexport const WARNING = 'WARNING';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\nexport const TOGGLE_LOADER = 'TOGGLE_LOADER';\nexport const WARNING_TOGGLE = 'WARNING_TOGGLE';\nexport const SET_REDIRECT = 'SET_REDIRECT';\n\nexport const GET_RECIPE = 'GET_RECIPE';\n\nexport const SEARCH = 'SEARCH';\n\nexport const SET_IMPORT_QUEUE = 'SET_IMPORT_QUEUE';\nexport const EXTERNAL_RECIPE_SEARCH = 'EXTERNAL_RECIPE_SEARCH';\nexport const AUTOCOMPLETE = 'AUTOCOMPLETE';\nexport const SET_SEARCH_SUGGESTIONS = 'SET_SEARCH_SUGGESTIONS';\n\nexport const GRAPHQL = 'GRAPHQL';\n\nexport const IMPORT_RECIPE = 'IMPORT_RECIPE';\nexport const SET_DRAFT_RECIPE = 'SET_DRAFT_RECIPE';\n\nexport const UPDATE_USER_RECORD = 'UPDATE_USER_RECORD';\nexport const SEND_PASSWORD_RESET_EMAIL = 'SEND_PASSWORD_RESET_EMAIL ';\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport const RESEND_VERIFICATION = 'RESEND_VERIFICATION';\n\nexport const GET_RECIPE_TOKEN = 'GET_RECIPE_TOKEN';\nexport const CLAIM_RECIPE = 'CLAIM_RECIPE';\n\nexport const REQUEST_RECIPE = 'REQUEST_RECIPE';\n","export default class Auth {\n\n  setSession = (token, user) => {\n    localStorage.setItem('access_token', token);\n    localStorage.setItem('user', user);\n  }\n\n  setRealmUser = (realmUser) => {\n    // TODO: convert all realm_user instances to use realm_\n    localStorage.setItem('realm_user_complete', JSON.stringify(realmUser));\n    localStorage.setItem('realm_user', realmUser.id);\n  }\n\n  getRealmUser = () => {\n    console.log(\"getting the realm user\")\n    localStorage.getItem('realm_user');\n  }\n\n  setToken = (token) => {\n    localStorage.setItem('access_token', token);\n  }\n\n  logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('realm_user_complete');\n\n  }\n\n  getToken = () => {\n    let token = localStorage.getItem('access_token');\n    return token\n  }\n\n  getUser = () => {\n    let user = localStorage.getItem('user');\n    return user\n  }\n\n  validateCredentials = (email, password) => {\n    var emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\n    var passwordRegex = /^(?=.*\\d)(?=.*[a-z]).{8,20}$/;\n\n    if (emailRegex.test(email) && passwordRegex.test(password)) {\n      //pass\n      return 1;\n    }\n    else if (emailRegex.test(email)){\n      // Password must contain 8 characters\n      return 2;\n    }\n    else {\n      // Invalid email.\n      return 3;\n    }\n  }\n\n  validatePassword = (password) => {\n    var passwordRegex = /^(?=.*\\d)(?=.*[a-z]).{8,20}$/;\n    return passwordRegex.test(password)\n  }\n\n}\n","\n// export const BASE_URL = 'http://localhost:8080/';\nexport const BASE_URL = 'https://funky-radish-api.herokuapp.com/';\n\nexport const REALM_APP_ID = 'funky-radish-twdxv';\n","import * as Realm from \"realm-web\";\nimport { REALM_APP_ID } from \"../constants/api\";\n\nconst realmApp = new Realm.App({ id: REALM_APP_ID });\n\nexport default class RealmService {\n\n  authenticate = (token) => {\n    const credentials = Realm.Credentials.jwt(token);\n    return realmApp.logIn(credentials)\n  }\n\n  getRealm = () => {\n    return realmApp\n  }\n\n  logoutRealm = () => {\n    const user = realmApp.currentUser;\n    realmApp.removeUser(user);\n    return\n  }\n\n  getUser = () => {\n    const user = realmApp.currentUser\n    return user\n  }\n\n  // changePassword = (email, password) => {\n  //   console.log(\"cool dawg: \" + email + \", \" + password )\n  //\n  //   realmApp.emailPasswordAuth.callResetPasswordFunction(email, password, {});\n  // }\n\n}\n","import React from \"react\";\n\nimport RealmService from '../services/RealmService'\n\nimport {\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\n\nconst realmService = new RealmService();\n\nexport const RealmApolloContext = React.createContext();\n\n// Create an ApolloClient that connects to the provided Realm.App's GraphQL API\nconst createRealmApolloClient = (app) => {\n  const link = new HttpLink({\n     // TODO: Add your Realm App ID to the uri link to connect your app.\n    uri: `https://realm.mongodb.com/api/client/v2.0/app/${app.id}/graphql`,\n    // A custom fetch handler adds the logged in user's access token to GraphQL requests\n    fetch: async (uri, options) => {\n      if (!app.currentUser) {\n        throw new Error(`Must be logged in to get recipes: ` + app);\n      }\n\n      // Refreshing a user's custom data also refreshes their access token\n      await app.currentUser.refreshCustomData();\n      options.headers.Authorization = `Bearer ${app.currentUser.accessToken}`;\n\n      return fetch(uri, options);\n    },\n  });\n\n  const cache = new InMemoryCache();\n\n  return new ApolloClient({ link, cache });\n};\n\nexport default function RealmApolloProvider({ children }) {\n  const [app, setApp] = React.useState(realmService.getRealm)\n  const [client, setClient] = React.useState(createRealmApolloClient(app))\n  const [currentUser, setCurrentUser] = React.useState(app.currentUser);\n\n  React.useEffect(() => {\n    setClient(client);\n  }, [app]);\n\n  const wrapped = { ...app, currentUser, setCurrentUser };\n\n  return <RealmApolloContext.Provider value={wrapped}>\n    <ApolloProvider client={client} app={app} >\n      {children}\n    </ApolloProvider>\n  </RealmApolloContext.Provider>;\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { setUsername, clearRecipes, toggleMenu, logout } from \"../actions/Actions\";\n\nimport Auth from '../Auth'\n\nimport { RealmApolloContext } from \"../graphql/RealmApolloProvider\";\n\nimport RealmService from '../services/RealmService'\nconst realmService = new RealmService();\n\nconst auth = new Auth();\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    let user = realmService.getUser()\n\n    this.state = {\n      user: user,\n      menu: false\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout(event) {\n    event.preventDefault();\n    this.context.setCurrentUser(null)\n\n    this.props.setUsername(\"\");\n    this.props.clearRecipes();\n    this.props.toggleMenu();\n    this.props.logout();\n    auth.logout();\n  }\n\n  renderUserState() {\n    if (this.context.currentUser) {\n        return (\n          [\n            <li key='1' className=\"user-label\">{this.context.currentUser.customData.email}</li>,\n            <li key='2'><a href='/' onClick={this.handleLogout} >Logout</a></li>\n          ]\n        );\n    }\n    else {\n      return(\n        [\n          <li key='3'><a href='/login'>Login</a></li>,\n          <li key='4'><a href='/signup'>Signup</a></li>\n        ]\n      )\n    }\n\n  }\n\n  render() {\n    return (\n      <div className={this.props.menu ? 'open' : ''} id='menu'>\n        <ul>\n          {this.renderUserState()}\n          <li key='5'>\n            <a href='//docs.google.com/document/d/1LJDYrEtm67WId9lE8Khlx_jvb0letNNlGGbenT42gg4/edit?usp=sharing'>Road Map</a>\n          </li>\n          <li key='6'>\n            <a href='./about'>About</a>\n          </li>\n          <li key='7'>\n            <a href='./privacy'>Privacy</a>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nMenu.contextType = RealmApolloContext;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    menu: state.menu\n  };\n}\n\nexport default connect(mapStateToProps, { setUsername, clearRecipes, toggleMenu, logout })(Menu);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { debounce } from 'lodash';\nimport { useLocation, Switch } from 'react-router-dom';\nimport { search, autocomplete, setSearchSuggestions, externalRecipeSearch, setRedirect } from \"../actions/Actions\";\n\nimport { RealmApolloContext } from \"../graphql/RealmApolloProvider\";\n\n// import useRecipeSearch from \"../graphql/useRecipes\";\n\nimport { useHistory } from 'react-router-dom'\n\nclass SearchBar extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      suggestions: [],\n      cursor: 0\n    };\n\n    this.throttleHandleChange = debounce(this.throttleHandleChange.bind(this), 100)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n\n    this.searchRef = React.createRef()\n  }\n\n  throttleHandleChange(event) {\n    this.props.search(event.target.value)\n  }\n\n  handleChange(event) {\n    this.throttleHandleChange(event)\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === 13) { // Enter\n      // cursor can be used to select search suggestion.\n      if (this.state.cursor === 0) {\n        if (event.target.value === \"\") {\n          this.props.externalRecipeSearch('')\n        }\n        else {\n          console.log(\"searching\")\n          this.props.externalRecipeSearch(event.target.value.replace(/\\s+/g, '-'))\n\n          // If you're not at home -> redirect\n          if (window.location.pathname != \"/\") {\n            console.log(\"on the rec page. Redirecting now.\")\n            this.props.setRedirect(\"/\")\n          }\n        }\n      }\n      else {\n        // this.props.externalRecipeSearch(this.props.suggestions[this.state.cursor-1].title.replace(/\\s+/g, '-'))\n        // this.props.externalRecipeSearch()\n        // event.target.value = this.props.suggestions[this.state.cursor-1].title\n        //\n        // this.setState({\n        //   cursor: 0\n        // });\n        //\n        this.props.setSearchSuggestions([])\n      }\n    }\n    else if (event.keyCode === 38) { // Up Arrow\n      if(this.state.cursor === 0) {\n        return\n      }\n      else {\n        this.setState({\n          cursor: this.state.cursor - 1\n        })\n      }\n    }\n    else if (event.keyCode === 40) { // Down Arrow\n      if(this.state.cursor === this.props.suggestions.length) {\n        return\n      }\n      else {\n        this.setState({\n          cursor: this.state.cursor + 1\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"RecipeSearchField\">\n        {this.context.currentUser ? (\"\") : (<p className=\"search-cta\">Find a recipe -></p>)}\n        <img src=\"/search_icon.svg\" height=\"30\" alt=\"Funky Radish\"/>\n        <input\n          type=\"text\"\n          placeholder=\"Search..\"\n          onChange={this.handleChange}\n          onKeyDown={ this.handleKeyDown }\n          ref={this.searchRef}\n        />\n      </div>\n    );\n  }\n}\n\nSearchBar.contextType = RealmApolloContext;\n\nfunction mapStateToProps(state) {\n  return {\n    suggestions: state.suggestions\n  };\n}\n\nexport default connect(mapStateToProps, { search, autocomplete, setSearchSuggestions, externalRecipeSearch, setRedirect } )(SearchBar);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { toggleMenu } from \"../actions/Actions\";\nimport Menu from './Menu';\nimport SearchBar from \"./SearchBar\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: false\n    };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu(e) {\n    e.stopPropagation();\n    this.props.toggleMenu();\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Menu/>\n\n          <header className=\"header\">\n            <a href=\"/\">\n              <img\n                className=\"icon\"\n                 srcset=\"/icon/icon-small.webp 1x, /icon/icon-medium.webp 2x\"\n                 src=\"/icon/icon-medium.webp\"\n                 alt=\"FunkyRadish Icon\"\n              />\n            </a>\n\n            <SearchBar/>\n\n            <div id=\"Nav-Icon\" className={this.props.menu ? 'open' : ''} onClick={this.toggleMenu}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </header>\n\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    menu: state.menu\n  };\n}\n\nexport default connect(mapStateToProps, { toggleMenu })(Navigation);\n","import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass Admin extends Component {\n  render() {\n    return (\n      <div className=\"AdminContainer\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Funky Radish Recipe App - Admin</title>\n        </Helmet>\n\n        <a href='/admin/importer' >Importer</a>\n        <br></br>\n        <a href='/admin/graph' >Graph</a>\n        <br></br>\n        <a href='/admin/recipes' >Recipes</a>\n        <br></br>\n        <a href='/admin/users' >Users</a>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass GraphAdmin extends Component {\n  render() {\n    return (\n      <div className=\"GraphAdminContainer\">\n        <h1>Graph</h1>\n      </div>\n    );\n  }\n}\n\nexport default GraphAdmin;\n","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nimport RealmService from '../services/RealmService'\nconst realmService = new RealmService();\n\nconst useRecipes = (author, watching) => {\n  console.log(\"and then: \" + watching)\n  const { loading, error, data } = useAllRecipesInProject(author, watching);\n\n  return { loading, error, data };\n};\n\nexport default useRecipes;\n\nfunction useAllRecipesInProject(author, watching) {\n\n  console.log(\"author: \" + author + \" watching: \" + watching)\n\n  const RECIPE_QUERY = gql`\n    query Recipes($author: String!, $watching: [String!]){\n      recipes(query: {OR: [{ author: $author }, {_id_in: $watching}]}) {\n        _id\n        author\n        title\n      }\n    }`;\n\n  const { loading, error, data } = useQuery(RECIPE_QUERY, {\n    variables: { author, watching },\n    onCompleted: () => {console.log(\"query completed.\")}\n  });\n\n  //TODO: Set the user and adjust the menu.\n  return { loading, error, data};\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport useRecipes from \"../../graphql/useRecipes\";\nimport { Link } from 'react-router-dom';\n\nimport { warning } from \"../../actions/Actions\";\n\nfunction RecipesAdmin(props) {\n  const dispatch = useDispatch()\n  let list = []\n\n  const { loading, error, data } = useRecipes(\"61e1e4cafbb17b00164fc738\", list);\n\n  if(error) {\n    dispatch(warning(error.message))\n  }\n\n  if(data) {\n    console.log(data)\n  }\n\n  let rec = data?.recipes.filter(function(recipe) {\n    if(props.query && props.query.length > 0) {\n      return recipe.title.toLowerCase().includes(props.query)\n    } else {\n      return true\n    }\n  })\n  ?? []\n\n  return data?.recipes? (\n    <div className=\"recipeView\">\n\n    { rec.length > 0 ?  (\n      <ul>\n        {rec.map((recipe) =>\n          <li key={recipe._id.toString()}>\n            <Link\n              className=\"recipeListing\"\n              to={{ pathname: \"/admin/importer/\" + recipe._id}}\n            > {recipe.title} </Link>\n          </li>\n        )}\n      </ul> ) :\n      <div>\n        No recipes.\n      </div> }\n    </div>\n  ):(\n    <div> Loading... </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { query: state.query };\n}\n\nexport default connect(mapStateToProps)(RecipesAdmin);\n","import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass UsersAdmin extends Component {\n  render() {\n    return (\n      <div className=\"UsersAdminContainer\">\n        <h1>Users</h1>\n      </div>\n    );\n  }\n}\n\nexport default UsersAdmin;\n","import React, { Component } from 'react';\n\nclass PrivacyPolicy extends Component {\n  render() {\n    return (\n      <div className=\"PrivacyContainer\">\n        <div className=\"Privacy\">\n          <h2>Privacy Policy</h2>\n          <p>Funky Radish was designed and built by Ryan goodwin as a Free app. This SERVICE is provided by Ryan Goodwin at no cost and is intended for use as is.</p>\n          <p>This page is used to inform visitors of my policies with regards to the collection, use, and disclosure of Personal Information for anyone who decides to use the Funky Radish Service.</p>\n          <p>If you choose to use this Service, you agree to the collection and use of information in relation to this policy. The Personal Information that I collect is used for providing and improving the Service. I will not use or share your information with anyone except as described in this Privacy Policy.</p>\n          <p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which are accessible at Funky Radish unless otherwise defined in this Privacy Policy.</p>\n          <p>\n            <strong>Information Collection and Use</strong>\n          </p>\n          <p>For a better experience, while using our Service, I may require you to provide certain personally identifiable information, including but not limited to email, username, password.</p>\n          <p>The app does use third party services that may collect information used to identify you.</p>\n          <div>\n            <p>Link to privacy policy of third party service providers used by the app</p>\n            <ul>\n              <li key='1'>\n                <a href=\"https://www.google.com/policies/privacy/\" target=\"_blank\" rel=\"noreferrer\">Google Play Services</a>\n              </li>\n            </ul>\n          </div>\n          <p>\n            <strong>Log Data</strong>\n          </p>\n          <p>I want to inform you that whenever you use my Service, in case of an error in the app I collect data and information (through third party products) on your phone called Log Data. This Log Data may include information such as your device Internet Protocol (“IP”) address, device name, operating system version, the configuration of the app when utilizing my Service, the time and date of your use of the Service, and other statistics.</p>\n          <p>\n            <strong>Cookies</strong>\n          </p>\n          <p>Cookies are files with a small amount of data that are commonly used as anonymous unique identifiers. These are sent to your browser from the websites that you visit and are stored on your device's internal memory.</p>\n          <p>This Service does not use these “cookies” explicitly. However, the app may use third party code and libraries that use “cookies” to collect information and improve their services. You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device. If you choose to refuse our cookies, you may not be able to use some portions of this Service.</p>\n          <p>\n            <strong>Service Providers</strong>\n          </p>\n          <p>I may employ third-party companies and individuals due to the following reasons:</p>\n            <ul>\n              <li key='10'>To facilitate our Service;</li>\n              <li key='11'>To provide the Service on our behalf;</li>\n              <li key='12'>To perform Service-related services; or</li>\n              <li key='13'>To assist us in analyzing how our Service is used.</li>\n            </ul>\n          <p>I want to inform users of this Service that these third parties have access toyour Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.</p>\n          <p>\n            <strong>Security</strong>\n          </p>\n          <p>I value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and I cannot guarantee its absolute security.</p>\n          <p>\n            <strong>Links to Other Sites</strong>\n          </p>\n          <p>This Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by me. Therefore, I strongly advise you to review the Privacy Policy of these websites. I have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.</p>\n          <p>\n            <strong>Children’s Privacy</strong>\n          </p>\n          <p>These Services do not address anyone under the age of 13. I do not knowingly collect personally identifiable information from children under 13. In the case I discover that a child under 13 has provided me with personal information, I immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact me at minedied@gmail.com so that I may take necessary actions.</p>\n          <p>\n            <strong>Changes to This Privacy Policy</strong>\n          </p>\n          <p> I may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately after they are posted on this page.</p>\n          <p>\n            <strong>Contact Us</strong>\n          </p>\n          <p>If you have any questions or suggestions about my Privacy Policy, do not hesitate to contact me at minedied@gmail.com.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PrivacyPolicy;\n","import React, { Component } from 'react';\n\nclass RoadMap extends Component {\n  render() {\n    return (\n      <div className=\"RoadMapContainer\">\n        <div className=\"RoadMap\">\n          <ul>\n            <li key='1'>\n              Automatic saving\n            </li>\n            <li key='2'>\n              Ingredient checklist\n            </li>\n            <li key='3'>\n              Bulk recipe import\n            </li>\n            <li key='4'>\n              Recipe sharing\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default RoadMap;\n","import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"AboutContainer\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Funky Radish Recipe App - About</title>\n          <meta name=\"description\" content= \"Funky Radish is a bare-bones recipe app, available on Google Play and the App Store.\" />\n        </Helmet>\n\n        <div className=\"Static-Info\">\n          <h2>Most recipe apps are weighed down by images, video and useless features. Funky Radish aims to be a lightweight and reliable recipe manager that can be easily accessed from all of your devices for free. Check out our <a href='//docs.google.com/document/d/1LJDYrEtm67WId9lE8Khlx_jvb0letNNlGGbenT42gg4/edit?usp=sharing'>roadmap</a> to see exactly what's being worked on, in real time.</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nclass Support extends Component {\n  render() {\n    return (\n      <div className=\"AboutContainer\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Funky Radish Recipe App - Support</title>\n        </Helmet>\n\n        <div className=\"Static-Info\">\n          <h2>For help or questions regarding any of the Funky Radish apps contact <i>chat@funkyradish.com</i>.</h2>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Support;\n","import { ObjectId } from \"bson\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nexport default function useRecipeMutations(recipe) {\n  return {\n    addRecipe: useAddRecipe(recipe),\n    updateRecipe: useUpdateRecipe(recipe),\n    deleteRecipe: useDeleteRecipe(recipe)\n  };\n}\n\nconst AddRecipeMutation = gql`\n  mutation AddRecipe($recipe: RecipeInsertInput!) {\n    addedRecipe: insertOneRecipe(data: $recipe) {\n    \t_id\n      author\n      title\n      ingredients {\n        _id\n        author\n        name\n      }\n      directions {\n        _id\n        author\n        text\n      }\n    }\n  }\n`;\n\nconst UpdateRecipeMutation = gql`\n  mutation UpdateRecipe(\n    $recipeId: String!,\n    $updates: RecipeUpdateInput!,\n    $oldIngredients: [String],\n    $oldDirections: [String]\n  ){\n    deletedIngredients: deleteManyIngredients(query: { _id_in: $oldIngredients }){\n      deletedCount\n    }\n    deletedDirections: deleteManyDirections(query: { _id_in: $oldDirections }){\n      deletedCount\n    }\n    updatedRecipe: updateOneRecipe(query: { _id: $recipeId }, set: $updates) {\n      _id\n      author\n      title\n      ingredients {\n        name\n      }\n      directions {\n        text\n      }\n    }\n  }\n`;\n\nconst DeleteRecipeMutation = gql`\n  mutation DeleteRecipe(\n    $recipeId: String!\n    $ingredients: [String!]\n    $directions: [String!]\n  ){\n    deletedRecipe: deleteOneRecipe(query: { _id: $recipeId }) {\n      _id\n      author\n      title\n      ingredients {\n        _id\n      }\n    }\n    deletedIngredients: deleteManyIngredients(query: { _id_in: $ingredients }) {\n      deletedCount\n    }\n    deletedDirections: deleteManyDirections(query: { _id_in: $directions }) {\n      deletedCount\n    }\n  }\n`;\n\nconst RecipeFieldsFragment = gql`\n  fragment RecipeFields on Recipe {\n    _id\n    author\n    title\n  }\n`;\n\nfunction useAddRecipe(recipe) {\n\n  const [addRecipeMutation] = useMutation(AddRecipeMutation, {\n    // Manually save added Recipes into the Apollo cache so that Recipe queries automatically update\n    // For details, refer to https://www.apollographql.com/docs/react/data/mutations/#making-all-other-cache-updates\n    update: (cache, { data: { addedRecipe } }) => {\n      cache.modify({\n        fields: {\n          recipes: (existingRecipes = []) => [\n            ...existingRecipes,\n            cache.writeFragment({\n              data: addedRecipe,\n              fragment: RecipeFieldsFragment,\n            }),\n          ],\n        },\n      });\n    },\n  });\n\n  const addRecipe = async (recipe) => {\n    const { addedRecipe } = await addRecipeMutation({\n      variables: {\n        recipe: {\n          _id: recipe._id,\n          author: recipe.author,\n          ...recipe,\n        },\n      },\n    });\n\n    return addedRecipe;\n  };\n\n  return addRecipe;\n}\n\nfunction useUpdateRecipe(recipe) {\n  const [updateRecipeMutation] = useMutation(UpdateRecipeMutation);\n  const updateRecipe = async (recipe) => {\n    const { updatedRecipe } = await updateRecipeMutation({\n      variables: {\n        recipeId: recipe.recipeId,\n        oldIngredients: recipe.oldIngredients,\n        oldDirections: recipe.oldDirections,\n        updates: recipe.updates\n      }\n    });\n    return updatedRecipe;\n  };\n  return updateRecipe;\n}\n\nfunction useDeleteRecipe(recipe) {\n  const [deleteRecipeMutation] = useMutation(DeleteRecipeMutation);\n  const deleteRecipe = async (recipe) => {\n    const { deletedRecipe } = await deleteRecipeMutation({\n      variables: {\n        recipeId: recipe._id,\n        ingredients: recipe.ingredients.create.map(ing => ing._id) || [],\n        directions: recipe.directions.create.map(dir => dir._id) || []\n      }\n    });\n    return deletedRecipe;\n  };\n  return deleteRecipe;\n}\n","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useRecipeMutations from \"./useRecipeMutations\";\n\n// TODO: handle error from gql  https://www.apollographql.com/docs/react/data/queries/#caching-query-results\n\nconst useNewRecipe = (rec) => {\n  const { addRecipe, updateRecipe, deleteRecipe } = useRecipeMutations(rec);\n  return { addRecipe, updateRecipe, deleteRecipe };\n};\n\nexport default useNewRecipe;\n","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n// import useTaskMutations from \"./useTaskMutations\";\n\n// TODO: handle error from gql  https://www.apollographql.com/docs/react/data/queries/#caching-query-results\n// TODO: implement mutations for the editor.\n\nconst useRecipe = (recId) => {\n  const { loading, error, data } = useRecipeInProject(recId);\n\n  return { loading, error, data };\n};\n\nexport default useRecipe;\n\nfunction useRecipeInProject(recId) {\n\n  // Terribly annoying that this is necesarry. We need to do this, either to convert the id to a const string?\n  // Or because somehow the query expects a parameter called id?\n  let id = recId\n  let skipSelector = false\n\n  const RECIPE_QUERY = gql`\n    query Recipe($id: String!){\n      recipe(query: { _id: $id }) {\n        title\n        author\n        ingredients {\n          _id\n          name\n        }\n        directions {\n          _id\n          text\n        }\n      }\n    }`;\n\n  const { loading, error, data } = useQuery(RECIPE_QUERY, {\n    variables: { id },\n    skip: !id || id.length < 4\n  });\n\n  //TODO: Set the user and adjust the menu.\n  return { loading, error, data};\n}\n","\nexport default class SVGService {\n\n  generate = (recipe) => {\n\n    return new Promise((fulfill, reject) => {\n      // Create title element.\n      let titleSection = ''\n      if (recipe.title.length > 55) {\n        reject(new Error('Title is too long to fit this format.'))\n      }\n      else {\n        titleSection = '<tspan x=\"100\" y=\"150\" >' + recipe.title + '</tspan>'\n      }\n\n      // Create ingredientSection\n      let y = 300\n      let ingredientSection = recipe.ingredients.create.map(function(ing, index) {\n        // What if the ingredient list is too long?\n        if (y > 950) {\n          reject(new Error('Ingredients are too long to fit this format.'))\n        }\n\n        let ingMaxLength = 35\n        let ingElement = ''\n\n        if (ing.name.length > ingMaxLength) {\n          // two line ingredient\n          let ingSplit = splitMultipleLines(ing.name, ingMaxLength)\n          ingElement = '<tspan x=\"100\" y=\"' + y.toString() + '\">□ ' + ingSplit.shift() + '</tspan>'\n            + ingSplit.map(function(ingSplice, index) {\n              y+=30\n              return '<tspan x=\"115\" y=\"' + (y).toString() + '\">' + ingSplice + '</tspan>'\n            }).join('')\n          y+=60\n        }\n        else {\n          ingElement = '<tspan x=\"100\" y=\"' + y.toString() + '\">□ ' + ing.name + '</tspan>'\n          y+=60\n        }\n        return ingElement\n      }).join('')\n\n      // Create directionSection\n      let dirCount = 1\n      let z = 300\n\n      let directionSection = recipe.directions.create.map(function(dir, index) {\n        // What if the ingredient list is too long, or the ingredient name itself is too long?\n        if (z > 950) {\n          reject(new Error('Directions are too long to fit this format.'))\n        }\n\n        let dirMaxLength = 110\n        let dirElement = ''\n\n        if (dir.text.length > dirMaxLength) {\n          let dirSplit = splitMultipleLines(dir.text, dirMaxLength)\n\n          dirElement = '<tspan x=\"650\" y=\"' + z.toString() + '\">' + dirCount.toString() + '. ' + dirSplit.shift() + '</tspan>'\n            + dirSplit.map(function(dirSplice, index) {\n              z+=30\n              return '<tspan x=\"676\" y=\"' + z.toString() + '\">' + dirSplice + '</tspan>'\n            }).join('')\n          z+=60\n        }\n        else {\n          dirElement = '<tspan x=\"650\" y=\"' + z.toString() + '\">'  + dirCount.toString() + '. ' + dir.text + '</tspan>'\n          z+=60\n        }\n        dirCount++\n        return dirElement\n      }).join('')\n\n      let image = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"1920\" height=\"1080\" viewBox=\"0 0 1920 1080\"> <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"rgb(162,255,177)\"/> <text font-family=\"Helvetica\" font-size=\"60\" font-style=\"normal\">'\n      + titleSection +\n      '</text> <text font-family=\"Helvetica\" font-size=\"24\" font-style=\"normal\">'\n      + ingredientSection +\n      '</text> <text font-family=\"Helvetica\" font-size=\"24\" font-style=\"normal\">'\n      + directionSection +\n      '</text><path d=\"M575,950 v-700\" stroke=\"black\" stroke-width=\"6\" /></svg>'\n\n      localStorage.setItem('mint_image', image);\n      localStorage.setItem('mint_recipe', recipe);\n\n      fulfill(image)\n    })\n  }\n}\n\nfunction splitLines(text, maxLength) {\n  let splitIndex = maxLength\n  //What if it contains no whitepace?\n  while (text[ splitIndex ] !== ' ') {\n    splitIndex--\n  }\n  return splitAtIndex(text, splitIndex)\n}\n\nfunction splitMultipleLines(text, maxLength) {\n  let splitText = []\n  let remainingText = text\n\n  while (remainingText.length > maxLength) {\n    let splitSection = splitLines(remainingText, maxLength)\n    splitText.push(splitSection[0])\n    if (splitSection[1].length > maxLength) {\n      remainingText = splitSection[1]\n    } else {\n      splitText.push(splitSection[1])\n      remainingText = ''\n      return splitText\n    }\n  }\n}\n\nfunction splitAtIndex(value, index) {\n  return [value.substring(0, index).trim(), value.substring(index).trim()]\n}\n","import { BASE_URL } from \"../constants/api\";\nvar path = require('path');\n\nexport default class ServerService {\n\n  async generateRecipeToken(recipeID) {\n    let token = localStorage.getItem('access_token');\n\n    let endpoint = BASE_URL + \"createRecipeToken/\" + recipeID\n    console.log(\"endpoint: \" + endpoint)\n    console.log(\"token\"  + token)\n    let response = await fetch(endpoint, {\n      method: 'get',\n      headers: new Headers({\n        'x-access-token': token\n      })\n    })\n\n    let data = await response.json()\n    return data;\n  }\n\n  async importRecipe(address) {\n    let encoded = encodeURIComponent(address);\n    let endpoint = BASE_URL + \"collector/inspect/\" + encoded\n    let response = await fetch(endpoint, { method: 'get' })\n\n    let data = await response.json()\n    return data;\n  }\n\n  // https://funky-radish-api.herokuapp.com/recipes/cookies\n  async searchRecipes(query) {\n    let endpoint = BASE_URL + \"recipes/\" + query\n\n    let response = await fetch(endpoint, { method: 'get' })\n\n    //error seems to be here. Maybe not json?\n    let data = await response.json()\n    return data;\n  }\n\n  // TODO: Probably deprecated\n  searchAutocomplete(query) {\n    return new Promise(function(resolve, reject) {\n\n      // When the search input is removed,\n      // there can exist a state where the autocomplete is set to \"\" before a previous autocomplete query returns.\n      // my solution is to use setTimeout to delay setting to \"\" and wait for any hanging fetch returns.\n      // I don't like this solution, but it works.\n\n      let data\n\n      if ( query === \"\") {\n        setTimeout(function(){\n          let obj = {message: \"Here ya go, punk!\", suggestions: [], error: \"\"}\n          resolve(obj)\n        }, 500);\n      }\n      else {\n        let endpoint = BASE_URL + \"collector/autocomplete?query=\" + query\n\n        fetch(endpoint, {\n          method: 'GET'\n        })\n        .then(function(response) {\n          console.log(response)\n          resolve(response);\n        })\n        .catch(function(err) {\n            reject(err);\n        });\n      }\n    })\n  }\n\n  async createUser(user) {\n    var params = {\n      name: user.username,\n      email: user.email,\n      password: user.password,\n      admin: false,\n      recipes: []\n    };\n\n    let endpoint = \"/users\"\n\n    let response = await fetch(endpoint, {\n      method: 'post',\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(params)\n    })\n    .catch(err => {\n      console.log('Error: ' + err)\n      return\n    })\n\n    let data = await response.json()\n    return data;\n  }\n\n  async loginUser(user) {\n\n    var params = {\n      email: user.email,\n      password: user.password\n    };\n\n    let endpoint = \"/authenticate\"\n\n    let response = await fetch(endpoint, {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n      body: JSON.stringify(params)\n    })\n    .catch(err => {\n      console.log('Error: ' + err)\n      return\n    })\n\n    let data = await response.json()\n    return data;\n  }\n\n}\n\nfunction fetchWithTimeout(endpoint) {\n  const FETCH_TIMEOUT = 8000;\n  let didTimeOut = false;\n\n  return new Promise(function(resolve, reject) {\n    const timeout = setTimeout(function() {\n      didTimeOut = true;\n      reject(new Error('Request timed out'));\n    }, FETCH_TIMEOUT);\n\n    fetch(endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(function(response) {\n        // Clear the timeout as cleanup\n        clearTimeout(timeout);\n        if(!didTimeOut) {\n          console.log('fetch successfull: ', response);\n          resolve(response);\n        }\n      })\n      .catch(function(err) {\n          console.log('fetch failed: ', err);\n          // Rejection already happened with setTimeout\n          if(didTimeOut) return;\n          // Reject with error\n          reject(err);\n      });\n  })\n\n\n}\n","// TODO: Remove useEffect\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport useNewRecipe from \"../graphql/useNewRecipe\";\nimport { ObjectId } from \"bson\";\nimport useRecipe from \"../graphql/useRecipe\";\n\nimport { setRedirect, importRecipe, warning, toggleLoader } from \"../actions/Actions\";\n\nimport SVGService from '../services/SVGService'\nimport ServerService from '../services/ServerService'\n\nimport Loader from \"./Loader\";\n\nconst svgService = new SVGService();\nconst serverService = new ServerService();\n\nlet currentRealmUser = localStorage.getItem('realm_user');\nlet fullRealmUser = JSON.parse(localStorage.getItem('realm_user_complete'));\n\n// newID is rather confusing...\n// Because...\n// 1. this id is not new in the case of editing an existing recipe.\n// 2. Sometimes I capitalize D, sometimes lowercase d\nlet newID = new ObjectId()\n\nfunction useDraftRecipe({ addRecipe, updateRecipe, deleteRecipe }, [ draftRecipe, setDraftRecipe, setBaseIngredients, setBaseDirections ], importAddress, recipeIdentification) {\n\n  const dispatch = useDispatch()\n\n  // A recipe which is being edited maintains a different state than what has been saved to Realm cloud.\n  // In progress means we've disabled the seamless reloading from cloud.\n  const [ recipeInProgress, setRecipeInProgress ] = React.useState(false)\n\n  const { loading, error, data } = useRecipe(recipeIdentification);\n\n  if (loading) {\n    dispatch(toggleLoader(true))\n  }\n\n  if (error) {\n    dispatch(toggleLoader(false))\n    dispatch(warning(error.message))\n  };\n\n  // So, if the recipe comes in, and it's not currently being worked on.\n  // That's when you might wanna set the recipe.\n  if (data && !recipeInProgress) {\n    dispatch(toggleLoader(false))\n\n    let draftRecipeIngredients = draftRecipe.ingredients.create.map(ingredientListing => {return ingredientListing.name}).join(\"\\n\")\n    let dataRecipeIngredients = data.recipe.ingredients.map(ingListing => {return ingListing.name}).join(\"\\n\")\n\n    let draftRecipeDirections = draftRecipe.directions.create.map(directionListing => {return directionListing.text}).join(\"\\n\")\n    let dataRecipeDirections = data.recipe.directions.map(dirListing => {return dirListing.text}).join(\"\\n\")\n\n    // First check if anything has changed.\n    if ((draftRecipeIngredients !== dataRecipeIngredients) || (draftRecipeDirections !== dataRecipeDirections) || (draftRecipe.title !== data.recipe.title)) {\n\n      setDraftRecipeComplete(recipeIdentification, data.recipe.title, dataRecipeIngredients, dataRecipeDirections )\n\n      let ingList = data.recipe.ingredients.map(ingListing => {return ingListing._id})\n      let dirList = data.recipe.directions.map(dirListing => {return dirListing._id})\n\n      setBaseIngredients(ingList)\n      setBaseDirections(dirList)\n    }\n  }\n\n  const createDraftRecipe = () => {\n    setDraftRecipe({\n      _id: newID,\n      author: currentRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    });\n  };\n\n  const deleteDraftRecipe = () => {\n    setDraftRecipe({\n      _id: newID,\n      author: currentRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    });\n  };\n\n  const resetDraftRecipe = () => {\n    setRecipeInProgress(true)\n\n    setDraftRecipe({\n      _id: newID,\n      author: currentRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    });\n  };\n\n  const setDraftRecipeTitle = (title) => {\n    setRecipeInProgress(true)\n\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: draftRecipe.author,\n      title: title,\n      ingredients: draftRecipe.ingredients,\n      directions: draftRecipe.directions\n    });\n  };\n\n  const setDraftRecipeIngredients = (ingredients) => {\n    setRecipeInProgress(true)\n\n    let ingList = ingredients.split(/\\r?\\n/).map(ingredientName => {\n      return { _id: new ObjectId(), author: draftRecipe.author, name: ingredientName }\n    });\n\n    let ingObject = {\n      create: ingList,\n      link: [draftRecipe._id]\n    }\n\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: draftRecipe.author,\n      title: draftRecipe.title,\n      ingredients:  ingObject,\n      directions: draftRecipe.directions\n    });\n  };\n\n  const setDraftRecipeDirections = (directions) => {\n    setRecipeInProgress(true)\n\n    let dirList = directions.split(/\\r?\\n/).map(directionText => {\n      return { _id: new ObjectId(), author: draftRecipe.author, text: directionText }\n    });\n\n    let dirObject = {\n      create: dirList,\n      link: [draftRecipe._id]\n    }\n\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: draftRecipe.author,\n      title: draftRecipe.title,\n      ingredients: draftRecipe.ingredients,\n      directions: dirObject\n    });\n  };\n\n  const submitDraftRecipe = async (id, ing, dir) => {\n    draftRecipe._id = draftRecipe._id.toString()\n\n    console.log(\"inspecting with prop id: \" + id)\n    dispatch(toggleLoader(true))\n\n    if (!id || id === \"\") {\n      await addRecipe(draftRecipe).then((rec) => {\n        dispatch(toggleLoader(false))\n        dispatch(setRedirect(\"/builder/\" + draftRecipe._id))\n        console.log(\"returned recipe is: \" + rec)\n      });\n    }\n    else {\n      let rec = {\n        recipeId: draftRecipe._id,\n        oldIngredients: ing,\n        oldDirections: dir,\n        updates: draftRecipe\n      }\n\n\n      // console.log(\"this should be maybe not a new recipe. This should be a recipe downloadeded from the ole internet.\")\n      await updateRecipe(rec).then((resp) => {\n        dispatch(toggleLoader(false))\n        console.log(\"recipe updated I think\")\n      });\n    }\n  };\n\n  const submitDeleteRecipe = async () => {\n    if (window.confirm('Are you sure you wish to delete this recipe?')) {\n      //If it's a new recipe, just clear it out.\n      if (draftRecipe._id === newID) {\n        resetDraftRecipe()\n      }\n      else {\n        dispatch(toggleLoader(true))\n\n        await deleteRecipe(draftRecipe).then((obj) => {\n          dispatch(toggleLoader(false))\n          dispatch(setRedirect(\"/builder/\"))\n          newID = new ObjectId()\n          resetDraftRecipe()\n        });\n      }\n    } else {\n      console.log(\"delete canceled\")\n    }\n  };\n\n  const importFromAddress = async () => {\n    dispatch(toggleLoader(true))\n    serverService.importRecipe(importAddress)\n    .then(res=> {\n      let dirObject = {\n        create: res.directions.map((dir) => {return { _id: new ObjectId(), author: currentRealmUser, text: dir }}),\n        link: [newID]\n      }\n\n      let ingObject = {\n        create: res.ingredients.map((ing) => { return { _id: new ObjectId(), author: currentRealmUser, name: ing }}),\n        link: [newID]\n      }\n\n      setDraftRecipe({\n        _id: newID,\n        author: currentRealmUser,\n        title: res.title,\n        ingredients: ingObject,\n        directions: dirObject\n      });\n\n      dispatch(toggleLoader(false))\n    })\n    .catch(err => {\n      dispatch(toggleLoader(false))\n      return dispatch(warning(\"Import failed: \" + err))\n    })\n  }\n\n  const mintNFT = () => {\n    console.log(\"let's try and create the SVG\")\n    svgService.generate(draftRecipe)\n    .then((image) => {\n      // dispatch(setRedirect(\"/builder/\" + draftRecipe._id))\n      console.log(\"image returned: \" + image)\n      dispatch(setRedirect(\"/minter/\"))\n    })\n    .catch((err) => {\n      console.log(\"didn't work: \" + err.message)\n      dispatch(warning(err.message))\n    });\n  };\n\n  function setDraftRecipeComplete(id, title, ingredients, directions) {\n    let dirList = directions.split(/\\r?\\n/).map(directionText => {\n      return { _id: new ObjectId(), author: draftRecipe.author, text: directionText }\n    });\n\n    let dirObject = {\n      create: dirList,\n      link: [id]\n    }\n\n    let ingList = ingredients.split(/\\r?\\n/).map(ingredientName => {\n      return { _id: new ObjectId(), author: draftRecipe.author, name: ingredientName }\n    });\n\n    let ingObject = {\n      create: ingList,\n      link: [id]\n    }\n\n    setDraftRecipe({\n      _id: id,\n      author: draftRecipe.author,\n      title: title,\n      ingredients: ingObject,\n      directions: dirObject\n    });\n  };\n\n  return {\n    resetDraftRecipe,\n    createDraftRecipe,\n    deleteDraftRecipe,\n    setDraftRecipeTitle,\n    setDraftRecipeIngredients,\n    setDraftRecipeDirections,\n    submitDraftRecipe,\n    submitDeleteRecipe,\n    importFromAddress,\n    mintNFT\n  };\n}\n\nexport default function Builder(props) {\n  let recipeIdentification = props.match.params.recipeId\n\n  const redirector = useSelector((state) => state.redirect)\n\n  const [ draftRecipe, setDraftRecipe ] = React.useState(\n    {\n      _id: newID,\n      author: \"\",\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    }\n  )\n\n  const [ baseIngredients, setBaseIngredients ] = React.useState([])\n  const [ baseDirections, setBaseDirections ] = React.useState([])\n  const [ importAddress, setImportAddress ] = React.useState(\"\")\n\n  const { addRecipe, updateRecipe, deleteRecipe } = useNewRecipe(draftRecipe);\n\n  const {\n    resetDraftRecipe,\n    createDraftRecipe,\n    deleteDraftRecipe,\n    setDraftRecipeTitle,\n    setDraftRecipeIngredients,\n    setDraftRecipeDirections,\n    submitDraftRecipe,\n    submitDeleteRecipe,\n    importFromAddress,\n    mintNFT\n  } = useDraftRecipe({ addRecipe, updateRecipe, deleteRecipe }, [ draftRecipe, setDraftRecipe, setBaseIngredients, setBaseDirections ], importAddress, recipeIdentification);\n\n  return (\n    <div className=\"builder\">\n      <form onSubmit={e => {\n          e.preventDefault();\n          setBaseIngredients(baseIngredients)\n          setBaseDirections(baseDirections)\n\n          submitDraftRecipe(recipeIdentification, baseIngredients, baseDirections);\n        }}\n      >\n\n      <button type=\"clear\" onClick={e => {\n          e.preventDefault();\n          if (window.confirm('Are you sure you want to clear the form? Unsaved changes will be lost.')) {\n            resetDraftRecipe()\n          } else {\n            console.log(\"clear canceled\")\n          }\n        }}>\n        Clear\n      </button>\n\n      <button type=\"delete\" onClick={e => {\n          e.preventDefault();\n          submitDeleteRecipe()\n        }}>\n        Delete\n      </button>\n\n      <button type=\"submit\">\n        SAVE\n      </button>\n\n      <div className=\"recipe\">\n        <div className=\"title\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"title\"\n            id=\"title\"\n            value={draftRecipe? draftRecipe.title : \"\"}\n            onChange={(event) => {\n              setDraftRecipeTitle(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"ingredients\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ingredients\"\n            id=\"ingredients\"\n            value={draftRecipe.ingredients.create.length > 0 ? draftRecipe.ingredients.create.map(ingredientListing => {return ingredientListing.name}).join(\"\\n\") : \"\"}\n            onChange={(event) => {\n              setDraftRecipeIngredients(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"directions\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"directions\"\n            id=\"directions\"\n            value={draftRecipe.directions.create.length > 0 ? draftRecipe.directions.create.map(directionListing => {return directionListing.text}).join(\"\\n\") : \"\"}\n            onChange={(event) => {\n              setDraftRecipeDirections(event.target.value);\n            }}\n          />\n        </div>\n\n        { !recipeIdentification || recipeIdentification.length === 0 ?\n          <div>\n            <div className=\"title\">\n              <input\n                type=\"text\"\n                placeholder=\"import url\"\n                id=\"import\"\n                onChange={(event) => {\n                  setImportAddress(event.target.value);\n                }}\n              />\n            </div>\n\n            <button type=\"import\"\n              onClick={e => {\n                e.preventDefault();\n                importFromAddress()\n              }}>\n              Import\n            </button>\n          </div>\n          : <div></div>\n        }\n\n        { fullRealmUser && fullRealmUser.customData.admin ?\n          <button type=\"Create NFT\" onClick={e => {\n              e.preventDefault();\n              mintNFT()\n            }}>\n            Mint NFT\n          </button>\n        : <div></div> }\n\n      </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport useNewRecipe from \"../../graphql/useNewRecipe\";\nimport { ObjectId } from \"bson\";\nimport useRecipe from \"../../graphql/useRecipe\";\n\nimport { setRedirect, importRecipe, warning } from \"../../actions/Actions\";\n\nimport ServerService from '../../services/ServerService'\nconst serverService = new ServerService();\n\nlet communalRealmUser = \"61e1e4cafbb17b00164fc738\"\n\n// newID is rather confusing...\n// Because...\n// 1. this id is not new in the case of editing an existing recipe.\n// 2. Sometimes I cpitalize D, sometimes lowercase d\nlet newID = new ObjectId()\n\nfunction useDraftRecipe({ addRecipe, updateRecipe, deleteRecipe }, [ draftRecipe, setDraftRecipe ], importAddress) {\n\n  const dispatch = useDispatch()\n\n  const createDraftRecipe = () => {\n    setDraftRecipe({\n      _id: newID,\n      author: communalRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    })\n  };\n\n  const deleteDraftRecipe = () => {\n    setDraftRecipe({\n      _id: newID,\n      author: communalRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    })\n  };\n\n  const resetDraftRecipe = () => {\n    setDraftRecipe({\n      _id: newID,\n      author: communalRealmUser,\n      title: \"\",\n      ingredients: {create: [], link: [newID]},\n      directions: {create: [], link: [newID]}\n    })\n  };\n\n  const setDraftRecipeTitle = (title) => {\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: communalRealmUser,\n      title: title,\n      ingredients: draftRecipe.ingredients,\n      directions: draftRecipe.directions\n    })\n  };\n\n  const setDraftRecipeIngredients = (ingredients) => {\n    let ingList = ingredients.split(/\\r?\\n/).map(ingredientName => {\n      return { _id: new ObjectId(), author: communalRealmUser, name: ingredientName }\n    });\n\n    let ingObject = {\n      create: ingList,\n      link: [draftRecipe._id]\n    }\n\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: communalRealmUser,\n      title: draftRecipe.title,\n      ingredients:  ingObject,\n      directions: draftRecipe.directions\n    })\n\n  };\n\n  const setDraftRecipeDirections = (directions) => {\n    let dirList = directions.split(/\\r?\\n/).map(directionText => {\n      return { _id: new ObjectId(), author: communalRealmUser, text: directionText }\n    });\n\n    let dirObject = {\n      create: dirList,\n      link: [draftRecipe._id]\n    }\n\n    setDraftRecipe({\n      _id: draftRecipe._id,\n      author: communalRealmUser,\n      title: draftRecipe.title,\n      ingredients: draftRecipe.ingredients,\n      directions: dirObject\n    })\n  };\n\n  const setDraftRecipeComplete = (id, title, ingredients, directions) => {\n    let dirList = directions.split(/\\r?\\n/).map(directionText => {\n      return { _id: new ObjectId(), author: communalRealmUser, text: directionText }\n    });\n\n    let dirObject = {\n      create: dirList,\n      link: [id]\n    }\n\n    let ingList = ingredients.split(/\\r?\\n/).map(ingredientName => {\n      return { _id: new ObjectId(), author: communalRealmUser, name: ingredientName }\n    });\n\n    let ingObject = {\n      create: ingList,\n      link: [id]\n    }\n\n    setDraftRecipe({\n      _id: id,\n      author: communalRealmUser,\n      title: title,\n      ingredients: ingObject,\n      directions: dirObject\n    })\n  };\n\n  const submitDraftRecipe = async (id, ing, dir) => {\n    draftRecipe._id = draftRecipe._id.toString()\n\n    if (!id || id == \"\") {\n      await addRecipe(draftRecipe).then((rec) => {\n        dispatch(setRedirect(\"/admin/importer/\" + draftRecipe._id))\n        console.log(\"returned recipe is: \" + rec)\n      });\n    }\n    else {\n      let rec = {\n        recipeId: draftRecipe._id,\n        oldIngredients: ing,\n        oldDirections: dir,\n        updates: draftRecipe\n      }\n\n      console.log(\"passing this: \" + JSON.stringify(rec))\n\n      // console.log(\"this should be maybe not a new recipe. This should be a recipe downloadeded from the ole internet.\")\n      await updateRecipe(rec).then((resp) => {\n        console.log(\"recipe updated I think\")\n      });\n    }\n  };\n\n  const submitDeleteRecipe = async () => {\n    if (window.confirm('Are you sure you wish to delete this recipe?')) {\n      //If it's a new recipe, just clear it out.\n      if (draftRecipe._id == newID) {\n        resetDraftRecipe()\n      }\n      else {\n        await deleteRecipe(draftRecipe).then((obj) => {\n          dispatch(setRedirect(\"/admin/importer/\"))\n          newID = new ObjectId()\n          resetDraftRecipe()\n        });\n      }\n    } else {\n      console.log(\"delete canceled\")\n    }\n  };\n\n  const importFromAddress = async () => {\n    serverService.importRecipe(importAddress)\n    .then(res=> {\n      let dirObject = {\n        create: res.directions.map((dir) => {return { _id: new ObjectId(), author: communalRealmUser, text: dir }}),\n        link: [newID]\n      }\n\n      let ingObject = {\n        create: res.ingredients.map((ing) => { return { _id: new ObjectId(), author: communalRealmUser, name: ing }}),\n        link: [newID]\n      }\n\n      setDraftRecipe({\n        _id: newID,\n        author: communalRealmUser,\n        title: res.title,\n        ingredients: ingObject,\n        directions: dirObject\n      });\n    })\n    .catch(err => {\n      return dispatch(warning(\"Import failed: \" + err))\n    })\n  };\n\n  return {\n    resetDraftRecipe,\n    createDraftRecipe,\n    deleteDraftRecipe,\n    setDraftRecipeTitle,\n    setDraftRecipeIngredients,\n    setDraftRecipeDirections,\n    submitDraftRecipe,\n    setDraftRecipeComplete,\n    submitDeleteRecipe,\n    importFromAddress\n  };\n}\n\nexport default function Builder(props) {\n  let recipeIdentification = props.match.params.recipeId\n\n  const redirector = useSelector((state) => state.redirect)\n\n  // const draftRecipe = useSelector((state) => {\n  //   return state.draftRecipe\n  // })\n\n  // React.useEffect(() => {\n  //    createDraftRecipe()\n  // },[])\n\n  const { loading, error, data } = useRecipe(recipeIdentification);\n\n  // We have this issue where a recipe being edited maintains a different state than what has been saved to Realm cloud.\n  // In progress means we've disabled the seamless reloading from cloud.\n  const [ recipeInProgress, setRecipeInProgress ] = React.useState(false)\n\n  const [ draftRecipe, setDraftRecipe ] = React.useState(\n    {\n      _id: newID,\n      author: communalRealmUser,\n      title: \"\",\n      ingredients: { create: [], link: [newID] },\n      directions: { create: [], link: [newID] }\n    }\n  )\n\n  const [ baseIngredients, setBaseIngredients ] = React.useState([])\n  const [ baseDirections, setBaseDirections ] = React.useState([])\n  const [ importAddress, setImportAddress ] = React.useState(\"\")\n\n  const { addRecipe, updateRecipe, deleteRecipe } = useNewRecipe(draftRecipe);\n\n  const {\n    resetDraftRecipe,\n    createDraftRecipe,\n    deleteDraftRecipe,\n    setDraftRecipeTitle,\n    setDraftRecipeIngredients,\n    setDraftRecipeDirections,\n    submitDraftRecipe,\n    setDraftRecipeComplete,\n    submitDeleteRecipe,\n    importFromAddress\n  } = useDraftRecipe({ addRecipe, updateRecipe, deleteRecipe }, [ draftRecipe, setDraftRecipe ], importAddress);\n\n  if (loading) {\n    return 'Loading...';\n  }\n\n  if (data && !recipeInProgress) {\n    console.log(\"data arrived\")\n\n    let draftRecipeIngredients = draftRecipe.ingredients.create.map(ingredientListing => {return ingredientListing.name}).join(\"\\n\")\n    let dataRecipeIngredients = data.recipe.ingredients.map(ingListing => {return ingListing.name}).join(\"\\n\")\n\n    let draftRecipeDirections = draftRecipe.directions.create.map(directionListing => {return directionListing.text}).join(\"\\n\")\n    let dataRecipeDirections = data.recipe.directions.map(dirListing => {return dirListing.text}).join(\"\\n\")\n\n    if ((draftRecipeIngredients !== dataRecipeIngredients) || (draftRecipeDirections !== dataRecipeDirections) || (draftRecipe.title !== data.recipe.title)) {\n      setDraftRecipeComplete(recipeIdentification, data.recipe.title, dataRecipeIngredients, dataRecipeDirections )\n\n      let ingList = data.recipe.ingredients.map(ingListing => {return ingListing._id})\n      let dirList = data.recipe.directions.map(dirListing => {return dirListing._id})\n\n      setBaseIngredients(ingList)\n      console.log(\"setting base ing: \" + ingList)\n      setBaseDirections(dirList)\n      console.log(\"setting base ing: \" + dirList)\n    }\n  }\n\n  return (\n    <div className=\"builder\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          console.log(\"submitting with baseing: \" + baseIngredients)\n          console.log(\"submitting with basedir: \" + baseDirections)\n          setBaseIngredients(baseIngredients)\n          setBaseDirections(baseDirections)\n\n          submitDraftRecipe(recipeIdentification, baseIngredients, baseDirections);\n        }}\n      >\n\n      <button type=\"clear\" onClick={e => {\n          e.preventDefault();\n          if (window.confirm('Are you sure you want to clear the form? Unsaved changes will be lost.')) {\n            setRecipeInProgress(true)\n            resetDraftRecipe()\n          } else {\n            console.log(\"clear canceled\")\n          }\n        }}>\n        Clear\n      </button>\n\n      <button type=\"delete\" onClick={e => {\n          e.preventDefault();\n          submitDeleteRecipe()\n        }}>\n        Delete\n      </button>\n\n      <button type=\"submit\">\n        SAVE\n      </button>\n\n      <div className=\"recipe\">\n        <div className=\"title\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"title\"\n            id=\"title\"\n            value={draftRecipe? draftRecipe.title : \"\"}\n            onChange={(event) => {\n              setRecipeInProgress(true)\n              setDraftRecipeTitle(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"ingredients\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ingredients\"\n            id=\"ingredients\"\n            value={draftRecipe && draftRecipe.ingredients.create.length > 0 ? draftRecipe.ingredients.create.map(ingredientListing => {return ingredientListing.name}).join(\"\\n\") : \"\"}\n            onChange={(event) => {\n              setRecipeInProgress(true)\n              setDraftRecipeIngredients(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"directions\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"directions\"\n            id=\"directions\"\n            value={draftRecipe && draftRecipe.directions.create.length > 0 ? draftRecipe.directions.create.map(directionListing => {return directionListing.text}).join(\"\\n\") : \"\"}\n            onChange={(event) => {\n              setRecipeInProgress(true)\n              setDraftRecipeDirections(event.target.value);\n            }}\n          />\n        </div>\n\n        { !recipeIdentification || recipeIdentification.length === 0 ?\n          <div className=\"title\">\n            <input\n              type=\"text\"\n              placeholder=\"import url\"\n              id=\"import\"\n              onChange={(event) => {\n                setImportAddress(event.target.value);\n              }}\n            />\n          </div>: <div></div>\n        }\n\n        <button type=\"import\"\n          onClick={e => {\n            e.preventDefault();\n            importFromAddress()\n          }}>\n          Import\n        </button>\n\n      </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport useRecipes from \"../graphql/useRecipes\";\nimport { Link } from 'react-router-dom';\n\nimport { warning, toggleLoader } from \"../actions/Actions\";\n\nimport Loader from \"./Loader\";\n\nfunction RecipeList(props) {\n\n  const dispatch = useDispatch()\n  let list = []\n\n  if (props.author.customData && props.author.customData[\"recipes\"] && props.author.customData[\"recipes\"].length > 0) {\n    list = props.author.customData[\"recipes\"]\n  }\n\n  const { loading, error, data } = useRecipes(props.author.id, list);\n\n  if (loading) {\n    console.log(\"loading: \" + loading)\n    dispatch(toggleLoader(true))\n  }\n\n  if(error) {\n    console.log(\"error: \" + error)\n    dispatch(warning(error.message))\n  }\n\n  if(data) {\n    console.log(\"data\")\n    dispatch(toggleLoader(false))\n  }\n\n  let rec = data?.recipes.filter(function(recipe) {\n    if(props.query && props.query.length > 0) {\n      return recipe.title.toLowerCase().includes(props.query)\n    } else {\n      return true\n    }\n  })\n  ?? []\n\n  return (data?.recipes) ? (\n    <div className=\"recipeView\">\n\n    { rec.length > 0 ?  (\n      <ul>\n        {rec.map((recipe) =>\n          (recipe.author == props.author.id ?\n            <li key={recipe._id.toString()}>\n              <Link\n                className=\"recipeListing\"\n                to={{ pathname: \"/recipe/\" + recipe._id}}\n              > {recipe.title} </Link>\n            </li> :\n            <li key={recipe._id.toString()}>\n                <Link\n                  className=\"watchedRecipeListing\"\n                  to={{ pathname: \"/recipe/\" + recipe._id}}\n                > {recipe.title} </Link>\n            </li>)\n        )}\n      </ul> ) : (\n      <div>\n        { (props.query && props.query.length > 0) ?  (\n          <div>\n            Your book doesn't have any matching recipes. Hit enter on the search to check the FunkyRadish DB.\n            <br></br>\n            Or, click that '+' button at the lower right to add your own recipes.\n          </div>\n        ) : (\n          <div>\n            You don't have any recipes yet. Try search to check the FunkyRadish DB.\n            <br></br>\n            Or, click that '+' button at the lower right to add your own recipes.\n          </div>\n        ) }\n      </div>\n      ) }\n    </div>\n  ):(\n    <div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { query: state.query };\n}\n\nexport default connect(mapStateToProps)(RecipeList);\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { warning, requestRecipe } from \"../actions/Actions\";\n\nimport RealmService from '../services/RealmService'\nconst realmService = new RealmService();\n\nexport default function RecipeRequestView() {\n\n  const [query, setQuery] = useState('');\n  const [email, setEmail] = useState('');\n\n  const dispatch = useDispatch()\n\n  const submitRequest = (e) => {\n    e.preventDefault()\n    console.log(\"submitting request: \" + query + \", \" + email)\n\n    // Here is where we need to send a recipe request.\n    // Where I can easily find it\n    // And easily create a recipe and send it to the user.\n    let payload = {\n      query: query,\n      email: email\n    }\n\n    dispatch(requestRecipe(payload))\n\n    dispatch(warning('Recipe requested. Thank You!'))\n    setQuery('')\n    setEmail('')\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value )\n  }\n\n  const onChangeQuery = (e) => {\n    setQuery(e.target.value )\n  }\n\n  React.useEffect(() => {\n    let em = realmService.getUser()\n    let qu = query\n     console.log(\"Set the things if they're there: \" + em + \" , \" + qu)\n  },[])\n\n  return (\n    <div className=\"recipe-request-container\">\n      <h1>Don't see what you're looking for? </h1>\n      <h3>We don't have a ton of recipes yet. But we do take requests.</h3>\n      <form onSubmit={submitRequest}>\n        <label >Recipe Title</label><br></br>\n        <input placeholder='Recipe Title...' name='title' value={query} onChange={onChangeQuery} /><br></br>\n        <label for=\"html\">Your Email Address</label><br></br>\n        <input placeholder='Email...' name='email' value={email} onChange={onChangeEmail} /><br></br>\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport RecipeRequestView from \"./RecipeRequestView\";\n\nclass ExternalRecipeListView extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return this.props.externalRecipes ? (\n      <div className=\"externalRecipeView\">\n      <ul>\n        {this.props.externalRecipes.map((recipe, index) => (\n          // sp- is just a reference to sporctacular. If you ever add a different api, change this model.\n          <li key={recipe._id.toString()}>\n            <Link\n              className=\"externalRecipeListing\"\n              onClick={this.handleClick}\n              to={{\n                pathname: \"/recipe/\" + recipe.title.toLowerCase().replaceAll(' ', '-'),\n                state: {\n                  title: recipe.title,\n                  ingredients: recipe.ingredients\n                }\n              }}\n            > {recipe.title} </Link>\n          </li>\n        ))}\n      </ul>\n      <RecipeRequestView/>\n      </div>\n    ):(\n      <div></div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipe: state.recipe\n  };\n}\n\nexport default connect(mapStateToProps)(ExternalRecipeListView);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { getToken } from \"../actions/Actions\";\nimport { Helmet } from \"react-helmet\";\n\nimport RecipeList from \"./RecipeList\";\nimport ExternalRecipeList from \"./ExternalRecipeList\";\n\nimport RecipeRequestView from \"./RecipeRequestView\";\n\nimport { RealmApolloContext } from \"../graphql/RealmApolloProvider\";\n// import useRecipes from \"../graphql/useRecipes\";\n\nimport RealmService from '../services/RealmService'\nconst realmService = new RealmService();\n\nexport class Recipes extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let recipeQuery = props.match.params.query;\n    console.log(\"recipes query: \" + recipeQuery);\n\n    let user = localStorage.getItem('user');\n    let author = localStorage.getItem('realm_user');\n\n    console.log(\"realm user: \" + author)\n\n    this.state = {\n      recipes: [],\n      externalRecipes: [],\n      filteredRecipes: [],\n      author: author\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounting recipe page\")\n\n    let realmUser = realmService.getUser()\n    let userObject = localStorage.getItem('realm_user');\n\n    this.setState({ author: realmUser })\n\n    //TODO: MAybe set this to !realmUser and dump the first half\n    if (realmUser) {\n      this.context.setCurrentUser(realmUser)\n    }\n    else {\n      this.props.getToken();\n    }\n  }\n\n  render() {\n    return this.context.currentUser ? (\n      <div className=\"RecipeListContainer\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Funky Radish</title>\n          <meta name=\"description\" content= \"With FunkyRadish you can collect, store and share recipes from any device.\" />\n        </Helmet>\n\n        <RecipeList author={this.state.author}/>\n\n        <ExternalRecipeList externalRecipes={this.props.externalRecipes}/>\n\n        <div className=\"create-button\"><a href=\"./builder\">+</a></div>\n      </div>\n    ):(\n      this.props.externalRecipes? (\n        this.props.externalRecipes.length > 0 ? ([\n          <ExternalRecipeList externalRecipes={this.props.externalRecipes}/>\n        ]):(\n          <RecipeRequestView/>\n        )\n      ):(\n        <div className=\"not-logged-in-banner\">\n          <div className=\"not-logged-in-cta\">\n            <div className=\"landing-headline\">\n              <div className='title-wrapper'>\n                <h1>The recipe app for cooks...</h1>\n                <h3 className=\"landing-sub\">With FunkyRadish you can collect, store and share recipes from any device.</h3>\n              </div>\n            </div>\n\n            <a href=\"./login\">\n              <div className=\"login-text login-text--pushDown login-text--shadow\">Login</div>\n            </a>\n\n            <a href=\"./signup\">\n              <div className=\"login-text login-text--pushDown login-text--shadow\">Signup</div>\n            </a>\n\n            <div className=\"download-icons\">\n              <h2>Or download the apps...</h2>\n              <a href='https://play.google.com/store/apps/details?id=com.funkyradish.funky_radish&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='/play_store_badge.svg' height='75'/></a>\n              <a href='https://apps.apple.com/us/app/funky-radish/id1447293832?ls=1'><img alt='Download on the App Store' src='/app_store_badge.svg' height='75'/></a>\n            </div>\n          </div>\n\n          <div className=\"landing-screenshot\">\n\n             <source media=\"(max-width: 650px)\" srcset=\"/screenshot/screenshot-small.webp\"/>\n\n             <img\n                src=\"/screenshot/screenshot-medium.webp\"\n                alt=\"Funky Radish Screenshot\"\n             />\n          </div>\n\n        </div>\n      )\n    );\n  }\n}\n\nRecipes.contextType = RealmApolloContext;\n\n//TODO: Fixing this problem. Doing it right. User object get set on login and signup. getUser is a reducer\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    externalRecipes: state.externalRecipes,\n    filteredRecipes: state.filteredRecipes,\n    author: state.author\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, { getToken })(Recipes));\n","import React, { useState, useRef } from 'react';\n\nexport default function Popover(props) {\n\n  const textAreaRef = useRef(null);\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const copyToClipboard = (e) => {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    // This is just personal preference.\n    // I prefer to not show the whole text area selected.\n    e.target.focus();\n    setCopySuccess('Copied!');\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth\">\n        <a className=\"popover_dismiss\" onClick={e => {\n          e.preventDefault();\n          props.dismiss()\n        }}>Dismiss</a>\n        <div className=\"Title\">\n          <h1>{props.title}</h1>\n        </div>\n\n        <div className=\"Message\">\n          {props.message}\n        </div>\n\n        <br></br>\n        {props.url ? <form>\n          <textarea\n            ref={textAreaRef}\n            defaultValue={props.url}\n          />\n        </form> :\n        <div></div>}\n\n        {\n          /* Logical shortcut for only displaying the\n             button if the copy command exists */\n          document.queryCommandSupported('copy') &&\n           <div>\n             <button onClick={copyToClipboard}>Copy</button>\n             {copySuccess}\n           </div>\n         }\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setRecipe, getRecipe, setRedirect } from \"../actions/Actions\";\n\nimport Popover from \"./Popover\";\n\nimport ServerService from '../services/ServerService'\nconst serverService = new ServerService();\n\nexport default function Recipe(props) {\n\n  let recipeIdentifier = props.match.params.recipeTitle\n  //TODO: This is probably more acurately named realmUserId\n  let realmUser = localStorage.getItem('realm_user');\n\n  const [ popoverActive, setPopoverActive ] = React.useState(false)\n  const [ shareLink, setShareLink ] = React.useState('')\n\n  const dispatch = useDispatch()\n  var recipe = useSelector((state) => state.recipe)\n\n  const segueToEdit = () => {\n    // This should only be called if the recipe identifier is a recipe id.\n    // This function is accessed via a button which only appears when a recipe is viewed by its author.\n    dispatch(setRedirect(\"/builder/\" + recipeIdentifier))\n  };\n\n  const generateShareToken = () => {\n    // This should only be called if the recipe identifier is a recipe id.\n    // This function is accessed via a button which only appears when a recipe is viewed by its author.\n    serverService.generateRecipeToken(recipeIdentifier)\n      .then(res => {\n        setPopoverActive(true)\n        setShareLink('https://www.funkyradish.com/claimRecipe/' + res.token)\n      })\n  };\n\n  const dismissPopover = () => {\n    setShareLink('')\n    setPopoverActive(false)\n  };\n\n  React.useEffect(() => {\n    if (recipeIdentifier == null || recipeIdentifier == 'undefined') {\n      dispatch(setRedirect(\"/builder/\"))\n    } else {\n      dispatch(getRecipe(recipeIdentifier))\n    }\n  }, []);\n\n  return (recipe && recipe.title) ? (\n    <div className=\"Recipe\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{recipe.title}</title>\n        <meta name=\"description\" content= {\"Recipe for \" + recipe.title} />\n      </Helmet>\n\n      <div className=\"Title\">\n        <b>{recipe.title}</b>\n\n        {recipe.author === realmUser ? (\n          <div>\n            <img className=\"share_button\" src=\"/share_icon.svg\" alt=\"share\" onClick={e => {\n              e.preventDefault();\n              generateShareToken();\n            }}/>\n            <img className=\"edit_button\" src=\"/edit_icon.svg\" alt=\"Funky Radish\" onClick={e => {\n              e.preventDefault();\n              segueToEdit();\n            }}/>\n          </div>\n        ): (\n          <div></div>\n        )}\n      </div>\n\n      <div className=\"Ingredients\">\n        <ul>\n          {recipe.ingredients.map((ingredient, index) => (\n            <li key={ingredient._id}>\n              {ingredient.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Directions\">\n        <ul>\n          {recipe.directions.map((direction, index) => (\n            <li key={direction._id}>\n              {direction.text}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      { popoverActive ? (\n        <Popover\n          title=\"Share Your Recipe\"\n          message=\"Just copy the link below and send it to a friend. This is kinda awesome because we don't even have a chance to steal your friend's data along the way.\"\n          url={shareLink}\n          dismiss={dismissPopover}></Popover>\n      ):\n      (<div></div>)}\n\n    </div>\n  ) :\n  (\n    <div></div>\n  );\n}\n","// import { useQuery } from \"@apollo/client\";\n// import gql from \"graphql-tag\";\nimport useRecipeMutations from \"./useRecipeMutations\";\n\n// TODO: handle error from gql  https://www.apollographql.com/docs/react/data/queries/#caching-query-results\n// TODO: implement mutations for the editor.\n\nconst EditRecipe = (recipe) => {\n  console.log(\"adding a recipe: \" + recipe)\n  const { addRecipe, updateRecipe } = useRecipeMutations(recipe);\n\n  return { addRecipe, updateRecipe };\n};\n\nexport default EditRecipe;\n\n// function editRecipeInProject(recipe) {\n//\n//   // Terribly annoying that this is necesarry. We need to do this, either to convert the id to a const string?\n//   // Or because somehow the query expects a parameter called id?\n//\n//   console.log(recipe)\n//\n//   // let id = recId\n//\n//   // const RECIPE_QUERY = gql`\n//   //   query Recipe($id: String!){\n//   //     recipe(query: { _id: $id }) {\n//   //       title\n//   //       ingredients {\n//   //         name\n//   //       }\n//   //       directions {\n//   //         text\n//   //       }\n//   //     }\n//   //   }`;\n//\n//   // const { loading, error, data } = useQuery(RECIPE_QUERY, {\n//   //   variables: { id },\n//   // });\n//   //\n//   // const recipe = data ? data.recipe : null;\n//   // if (recipe) {\n//   //   console.log(\"returned recipe: \" + recipe.directions)\n//   // }\n//\n//   //TODO: Set the user and adjust the menu.\n//   return { loading, error, data};\n// }\n","\n// TODO: This is mostly unused now. The functionality has been rolled into Recipe.js\n\nimport React, { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { warning, toggleLoader } from \"../actions/Actions\";\n\nimport useRecipe from \"../graphql/useRecipe\";\nimport EditRecipe from \"../graphql/editRecipe\";\nimport Builder from \"./Builder\";\nimport Popover from \"./Popover\";\nimport Loader from \"./Loader\";\n\nimport ServerService from '../services/ServerService'\n\nimport { setRedirect } from \"../actions/Actions\";\n\nimport { Helmet } from \"react-helmet\";\n\nconst serverService = new ServerService();\n\nexport default function MyRecipe(props) {\n\n  // const redirector = useSelector((state) => state.redirect)\n  const [ active, setActive ] = React.useState(false)\n  const [ shareLink, setShareLink ] = React.useState('')\n\n  const dispatch = useDispatch()\n\n  let recId = props.match.params.recipeId\n\n  let realmUser = localStorage.getItem('realm_user');\n\n  const { loading, error, data } = useRecipe(recId);\n\n  if (recId == null || recId == 'undefined') return <Builder />\n\n  if (error) {\n    dispatch(warning(\"recipe loading error: \" + error.message))\n  };\n\n  const segueToEdit = () => {\n    dispatch(setRedirect(\"/builder/\" + recId))\n  };\n\n  const generateShareToken = () => {\n    serverService.generateRecipeToken(recId)\n      .then(res => {\n        console.log(res)\n        setActive(true)\n        setShareLink('https://www.funkyradish.com/claimRecipe/' + res.token)\n      })\n  };\n\n  const dismissView = () => {\n    setShareLink('')\n    setActive(false)\n  };\n\n  return data? (\n    <div className=\"Recipe\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{data.recipe.title}</title>\n        <meta name=\"description\" content= {\"Recipe for: \" + data.recipe.title + \". \"} />\n      </Helmet>\n\n      <div className=\"Title\">\n        <b>{data.recipe.title}</b>\n\n        {(data.recipe.author === realmUser ?\n        <img className=\"share_button\" src=\"/share_icon.svg\" alt=\"share\" onClick={e => {\n          e.preventDefault();\n          generateShareToken();\n        }}/> : <div></div>)}\n        <img className=\"edit_button\" src=\"/edit_icon.svg\" alt=\"Funky Radish\" onClick={e => {\n          e.preventDefault();\n          segueToEdit();\n        }}/>\n      </div>\n\n      <div className=\"Ingredients\">\n        {data.recipe.ingredients ? (\n          <ul>\n            {data.recipe.ingredients.map((ingredient, index) => (\n              <li key={index.toString()}>\n                {ingredient.name}\n              </li>\n            ))}\n          </ul>\n        ):\n        (<div></div>)}\n      </div>\n\n      <div className=\"Directions\">\n        {data.recipe.directions ? (\n          <ul>\n            {data.recipe.directions.map((direction, index) => (\n              <li key={index.toString()}>\n                {direction.text}\n              </li>\n            ))}\n          </ul>\n        ):\n        (<div></div>)}\n      </div>\n      {active ? (\n        <Popover\n          title=\"Share Your Recipe\"\n          message=\"Just copy the link below and send it to a friend. This is kinda awesome because we don't even have a chance to steal your friend's data along the way.\"\n          url={shareLink}\n          dismiss={dismissView}></Popover>\n      ):\n      (<div></div>)}\n\n    </div>\n  ) : (\n    <Loader loader='true'/>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\n\nimport { verifyEmail } from \"../actions/Actions\";\n\nexport class Verification extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token = props.match.params.token;\n\n    this.state = {\n      token: token || '',\n      verified: \"Just a moment while we verify your account...\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.verifyEmail(this.state.token);\n    // if(this.state.token.length > 0) {\n    //   this.props.verifyEmail(this.state.token);\n    // }\n  }\n\n  render() {\n\n    return (\n      <div className=\"verificationView\">\n        <b>{this.props.verified}</b>\n      </div>\n    );\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    verified: state.verified\n  };\n}\n\nexport default connect(mapStateToProps, { verifyEmail })(Verification);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport useNewRecipe from \"../graphql/useNewRecipe\";\n\nimport { setRedirect, claimRecipe, warning } from \"../actions/Actions\";\n\n// import RealmService from '../services/RealmService'\n// const realmService = new RealmService();\n\nlet fullRealmUser = localStorage.getItem('realm_user_complete');\n\nexport default function RecipeClaimer(props) {\n  const redirector = useSelector((state) => state.redirect)\n\n  const dispatch = useDispatch()\n\n  const [ recipeToken, setRecipeToken ] = React.useState(\"\")\n  const [ recipeAccepted, setRecipeAccepted ] = React.useState(\"\")\n\n  React.useEffect(() => {\n    let token = props.match.params.token\n     setRecipeToken(token)\n\n     if(token && token.length < 10) {\n       dispatch(warning(\"You need a token to claim a recipe.\"))\n       dispatch(setRedirect(\"/\"))\n       setRecipeAccepted(\"\")\n     }\n\n     if (fullRealmUser) {\n       console.log(\"user: \" + JSON.parse(fullRealmUser).customData._id)\n       console.log(\"token: \" + token)\n       let payload = {\n         member: JSON.parse(fullRealmUser).customData._id,\n         token: token\n       }\n\n       setRecipeAccepted(\"Just a moment while we find that recipe...\")\n\n       dispatch(claimRecipe(payload))\n     }\n     else {\n       localStorage.setItem('recipe_claim_token', token);\n     }\n  },[])\n\n  return (\n    <div className=\"verificationView\">\n      <b>{recipeAccepted}</b>\n      <br></br>\n      { fullRealmUser && fullRealmUser.length > 0 ?\n        <div>{JSON.parse(fullRealmUser).customData.name}</div>\n      : <div className=\"accept_recipe_flow\">\n        <b>Access your account,</b>\n        <br></br>\n        <b>to claim this recipe.</b>\n        <ul className=\"not-logged-in-banner\">\n          <li key='1'>\n            <a href=\"/login\">\n              <div className=\"login-text login-text--pushDown login-text--shadow\">Login</div>\n            </a>\n          </li>\n          <li key='2'>\n            <a href=\"/signup\">\n              <div className=\"login-text login-text--pushDown login-text--shadow\">Signup</div>\n            </a>\n          </li>\n        </ul>\n      </div>}\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { login, signup, resendVerification, sendPasswordResetEmail } from \"../actions/Actions\";\n\n// import { RealmApolloContext } from \"../graphql/RealmApolloProvider\";\n\nclass AuthView extends Component {\n  constructor(props) {\n    super(props);\n\n    let login = false;\n\n    if (props.match.url === \"/login\") {\n      login = true;\n    }\n\n    // Any number of links can be added here\n    this.state = {\n      login: login,\n      email: '',\n      password: ''\n    }\n  }\n\n  clearFields = (event) => {\n    this.setState({ email: \"\", password: \"\" })\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  resendVerification = (event) => {\n    event.preventDefault();\n    console.log(\"Resending verification\")\n\n    if(this.state.email.length > 0 && this.state.email.includes('@')) {\n      var emailPrompt = prompt(\"Is this your full email?\", this.state.email);\n\n      if (emailPrompt != null && emailPrompt.length > 0) {\n        this.props.resendVerification(emailPrompt)\n      }\n\n      this.clearFields()\n    }\n    else {\n      var emailPrompt = prompt(\"What's your email?\");\n\n      if (emailPrompt != null && emailPrompt.length > 0) {\n        this.props.resendVerification(emailPrompt)\n      }\n\n      this.clearFields()\n    }\n  }\n\n  forgotPassword = (event) => {\n    event.preventDefault();\n    console.log(\"clicked forgot password\")\n\n    if(this.state.email.length > 0 && this.state.email.includes('@')) {\n      var emailPrompt = prompt(\"Is this your full email?\", this.state.email);\n\n      if (emailPrompt != null && emailPrompt.length > 0) {\n        console.log(emailPrompt)\n        this.props.sendPasswordResetEmail(emailPrompt)\n      }\n    }\n    else {\n      var emailPrompt = prompt(\"What's your email?\");\n\n      if (emailPrompt != null && emailPrompt.length > 0) {\n        this.props.sendPasswordResetEmail(emailPrompt)\n      }\n    }\n\n    this.clearFields()\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.login) {\n      this.props.login({email: this.state.email, password: this.state.password});\n    }\n    else {\n      this.props.signup({email: this.state.email, password: this.state.password});\n    }\n  }\n\n  toggleMode = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      login: !this.state.login\n    });\n  }\n\n  render() {\n      return (\n        <div className='auth-container'>\n          <div className='auth'>\n            <a href='./'>Dismiss</a>\n            {this.state.login ? <h1>Login</h1> : <h1>Sign up</h1> }\n            <form onSubmit={this.onSubmit}>\n              <input placeholder='Email...' name='email' value={this.state.email} onChange={this.onChange} />\n              <input type='password' placeholder='Password...' name='password' value={this.state.password} onChange={this.onChange} />\n              {this.state.login ? <button>Login</button> : <button>Signup</button> }\n            </form>\n\n            <div className='auth_options_header'>Not what you're lookin' for?</div>\n            <br></br>\n\n            {this.state.login ? <a className='auth_options' href='./signup' >Sign Up</a> : <a className='auth_options' href='./login' >Login</a>} •\n             <a className='auth_options' onClick={this.resendVerification} >Resend Verification</a> •\n             <a className='auth_options' onClick={this.forgotPassword}>Forgot Password?</a>\n          </div>\n        </div>\n      )\n  }\n}\n\n// AuthView.contextType = RealmApolloContext;\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.email,\n    password: state.password\n  };\n}\n\nexport default connect(mapStateToProps, { login, signup, resendVerification, sendPasswordResetEmail })(AuthView);\n","// TODO: Remove useEffect\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport {useLocation} from \"react-router-dom\";\n\nimport { setRedirect, changePassword } from \"../actions/Actions\";\n\nexport default function ChangePasswordView(props) {\n  const dispatch = useDispatch()\n\n  const [ newPassword, setNewPassword ] = React.useState(\"\")\n  const [ token, setToken ] = React.useState(\"\")\n\n  React.useEffect(() => {\n     setToken(props.match.params.token)\n  },[])\n\n\n  return (\n    <div className=\"reset_password_view\">\n      <form onSubmit={e => {\n          e.preventDefault();\n          console.log(\"submitting with new password: \" + newPassword)\n        }}\n      >\n        <div className=\"reset_password_form\">\n          <div className=\"reset_password_header\">\n            <h2>Wanna change your password?</h2>\n            <h1>Type the new one below.</h1>\n          </div>\n\n          <div className=\"new_password\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"New Password\"\n              id=\"new_password\"\n              value={newPassword}\n              onChange={(e) => {\n                e.preventDefault();\n                setNewPassword(e.target.value);\n              }}\n            />\n          </div>\n\n          <button className=\"submit\" value=\"SUBMIT\" onClick={e => {\n              e.preventDefault();\n              console.log(\"clicked\")\n\n              dispatch(changePassword({\n                newPassword: newPassword,\n                token: token\n              }))\n\n              setNewPassword(\"\")\n            }}>\n            CHANGE PASSWORD\n          </button>\n\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nclass Warning extends Component {\n\n  render() {\n    return ( (this.props.warnings.length < 1) ? (<div></div>) : (\n      <div className=\"warning-container\">\n        {this.props.warnings.map((warning, index) => (\n          <b key={'warning' + index }>{warning.message}</b>\n        ))}\n      </div>\n    ));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    warnings: state.warnings\n  };\n}\n\nexport default connect(mapStateToProps)(Warning);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Redirector extends Component {\n\n  componentWillUnmount() {\n    console.log(\"unmounting redirect.\")\n  }\n\n  render() {\n    return (\n      (this.props.redirect) ? ( <Redirect to={this.props.redirect} /> ) : (<div></div>)\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    redirect: state.redirect\n  };\n}\n\nexport default connect(mapStateToProps)(Redirector);\n","import React, { useState, useEffect } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport { ethers } from \"ethers\";\n\nimport { setRedirect, warning } from \"../actions/Actions\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport { ColorPicker } from 'react-color-gradient-picker';\nimport 'react-color-gradient-picker/dist/index.css';\n\nimport myRecipeNFT from '../utils/MyRecipeNFT.json'\n\nconst color = {\n    red: 255,\n    green: 255,\n    blue: 255,\n    alpha: 0.9,\n};\n\nconst CONTRACT_ADDRESS = \"0x7610D542A9B99BfD6d3Fdf06582BCb67a1E96a82\";\n\nexport default function Minter(props) {\n\n  const redirector = useSelector((state) => state.redirect)\n  const dispatch = useDispatch()\n\n  const [ image, setImage ] = React.useState('')\n  const [ pickerOpened, setPickerOpened ] = React.useState(false)\n  const [ colorAttrs, setColorAttrs] = useState(color);\n  const [ currentAccount, setCurrentAccount] = useState(\"\");\n  const [ miningInProgress, setMiningInProgress ] = React.useState(false)\n  const [ minterRecipe, setMinterRecipe ] = React.useState({})\n\n\n  const onChange = (colorAttributes) => {\n    setColorAttrs(colorAttributes);\n    const regex = /height=\"100%\" fill=\".*\"\\/>/gm;\n    console.log(\"initial image: \" + image)\n    console.log(\"color: \" + colorAttributes.style)\n    let newImage = image.replace(regex, 'height=\"100%\" fill=\"' + colorAttributes.style + '\"/>')\n    console.log(\"newImage: \" + newImage)\n    setImage(newImage)\n    console.log(\"changing color: \" + image)\n  };\n\n  const onClick = () => {\n    setPickerOpened(!pickerOpened)\n  };\n\n  const createNFT = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      dispatch(warning(\"Go get Metamask!\"))\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    console.log(\"metamask accts: \" + accounts)\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account)\n      setupEventListener()\n\n      let correctNetwork = await checkNetwork()\n      if (correctNetwork) {\n        askContractToMintNft()\n      }\n      else {\n        dispatch(warning(\"You're not connected to Rinkeby.\"))\n      }\n    } else {\n      console.log(\"No authorized account found\")\n      connectWallet()\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      console.log(\"connecting wallet\")\n      const { ethereum } = window;\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setupEventListener()\n\n      let correctNetwork = await checkNetwork()\n      if (correctNetwork) {\n        askContractToMintNft()\n      }\n      else {\n        dispatch(warning(\"You're not connected to Rinkeby.\"))\n      }\n    } catch (error) {\n      dispatch(warning(\"error: \" + console.error()))\n    }\n  };\n\n  const checkNetwork = async () => {\n    const { ethereum } = window;\n\n    let chainId = await ethereum.request({ method: 'eth_chainId' });\n\n    // String, hex code of the chainId of the Rinkebey test network\n    // Main network = \"0x1\"\n    const rinkebyChainId = \"0x4\";\n    if (chainId !== rinkebyChainId) {\n      alert(\"You are not connected to the Rinkeby Test Network!\");\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  const setupEventListener = async () => {\n    // Most of this looks the same as our function askContractToMintNft\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        // Same stuff again\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myRecipeNFT.abi, signer);\n\n        // This will \"capture\" our event when our contract throws it.\n        // If you're familiar with webhooks, it's very similar to that!\n        connectedContract.on(\"NewRecipeNFTMinted\", (from, tokenId) => {\n          console.log(from, tokenId.toNumber())\n          alert(`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n        });\n\n        console.log(\"event listener registered!\")\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const askContractToMintNft = async () => {\n    setMiningInProgress(true)\n\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myRecipeNFT.abi, signer);\n\n        console.log(\"Going to pop the wallet now to pay gas...\")\n        let finalImage = image.replace('</svg>', '<text font-size=\"40\"><tspan x=\"1650\" y=\"1000\">')\n        console.log(\"minting: \" + finalImage + minterRecipe.title + JSON.stringify(minterRecipe.ingredients) + JSON.stringify(minterRecipe.directions))\n        let nftTxn = await connectedContract.makeARecipeNFT(finalImage, minterRecipe.title, JSON.stringify(minterRecipe.ingredients), JSON.stringify(minterRecipe.directions));\n\n        console.log(\"Mining...please wait.\")\n        await nftTxn.wait();\n\n        setMiningInProgress(false)\n\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n      } else {\n        setMiningInProgress(false)\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      setMiningInProgress(false)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"using effect: \" + image.length)\n\n    if (!image || (image.length < 1)) {\n      let initialImage = localStorage.getItem('mint_image');\n      let minterRecipe = localStorage.getItem('mint_recipe');\n      setMinterRecipe(minterRecipe);\n\n      console.log(\"though: \" + initialImage.length)\n\n\n      if (initialImage && initialImage.length < 1) {\n        setImage('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1920\" height=\"1080\" viewBox=\"0 0 1920 1080\"> <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"' + colorAttrs.style + '/><text fill=\"rgba(0,0,0,0.5)\" font-family=\"sans-serif\" font-size=\"60\" dy=\"10.5\" font-weight=\"bold\" x=\"50%\" y=\"50%\" text-anchor=\"middle\">1920×1080</text></svg>')\n      }\n      else {\n        setImage(initialImage);\n      }\n    }\n\n  });\n\n  return (\n    <div className=\"minter\">\n      <div className=\"svg_preview\">\n        Preview:\n        <img width='840' height='530' src={`data:image/svg+xml;utf8,${encodeURIComponent(image)}`} />\n\n        <div className=\"tools\">\n          <button className=\"background_color_button\" onClick={onClick} >Adjust Background Color</button>\n          { image && <button className=\"minter_button\" onClick={createNFT} >Mint</button> }\n          <a className='view_collection_button' href=\"https://testnets.opensea.io/collection/recipenft-tnl92pdxif\">Checkout The Full Collection!</a>\n\n          { pickerOpened &&\n            <div className=\"picker\">\n              <ColorPicker\n                onStartChange={onChange}\n                onChange={onChange}\n                onEndChange={onChange}\n                color={colorAttrs}\n              />\n            </div>\n          }\n        </div>\n      </div>\n      { miningInProgress &&\n        <div className=\"mining_in_progress\">\n          <iframe src=\"https://giphy.com/embed/6fDQ3k4IOqnEA\" width=\"960\" height=\"620\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/mining-stages-6fDQ3k4IOqnEA\">via GIPHY</a></p>\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\n\nimport './App.scss';\n\nimport Navigation from './components/Navigation';\n\nimport Admin from './components/admin/Admin';\nimport GraphAdmin from './components/admin/Graph';\nimport RecipesAdmin from './components/admin/Recipes';\nimport UsersAdmin from './components/admin/Users';\n\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport RoadMap from './components/RoadMap';\nimport About from './components/About';\nimport Support from './components/Support';\nimport Builder from \"./components/Builder\";\nimport Importer from \"./components/admin/Importer\";\n\nimport Recipes from \"./components/Recipes.js\";\nimport Recipe from \"./components/Recipe.js\";\nimport MyRecipe from \"./components/MyRecipe.js\";\nimport Verification from './components/Verification.js';\nimport RecipeClaimer from './components/RecipeClaimer.js';\n\nimport AuthView from './components/AuthView';\nimport ChangePasswordView from './components/ChangePasswordView';\nimport Loader from \"./components/Loader\";\nimport Warning from \"./components/Warning\";\nimport Redirector from './components/Redirector';\n\nimport Minter from './components/Minter';\n\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-141908035-1');\n    ReactGA.pageview('/');\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Loader />\n        <Redirector />\n        <Warning />\n\n        <div className=\"content\">\n          <Route path=\"/\" exact component={Recipes} />\n          <Route path=\"/login/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/signup/\" exact component={withRouter(AuthView)} />\n          <Route path=\"/about/\" exact component={About} />\n          <Route path=\"/support/\" exact component={Support} />\n          <Route path=\"/roadmap/\" component={RoadMap} />\n          <Route path=\"/privacy/\" component={PrivacyPolicy} />\n          <Route path=\"/verify/:token?\" component={Verification} />\n          <Route path=\"/builder/:recipeId?\" component={Builder} />\n          <Route path=\"/recipe/:recipeTitle?\" component={Recipe} />\n          <Route path=\"/myrecipes/:recipeId?\" component={MyRecipe} />\n          <Route path=\"/admin/\" component={Admin} />\n          <Route path=\"/admin/importer/:recipeId?\" component={Importer} />\n          <Route path=\"/admin/graph\" component={GraphAdmin} />\n          <Route path=\"/admin/recipes\" component={RecipesAdmin} />\n          <Route path=\"/admin/users\" component={UsersAdmin} />\n          <Route path=\"/claimRecipe/:token?\" component={RecipeClaimer} />\n          <Route path=\"/changePassword/:token?\" component={ChangePasswordView} />\n          <Route path=\"/minter\" component={Minter} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_RECIPE, UPDATE_RECIPE, RECIPES_LOADED, EXTERNAL_RECIPES_LOADED, SET_RECIPE, DELETE_LOCAL_RECIPE, CLEAR_RECIPES, SET_USERNAME, TOGGLE_MENU, TOGGLE_LOADER, WARNING, WARNING_TOGGLE, SET_REDIRECT, SEARCH, SET_VERIFIED, SET_IMPORT_QUEUE, SET_SEARCH_SUGGESTIONS, SET_DRAFT_RECIPE } from \"../constants/action-types\";\n\nfunction rootReducer(state, action) {\n  if (action.type === ADD_RECIPE) {\n    return Object.assign({}, state, {\n      recipes: state.recipes.concat(action.recipe)\n    });\n  }\n\n  if (action.type === CLEAR_RECIPES) {\n    return Object.assign({}, state, {\n      recipes: []\n    });\n  }\n\n  if (action.type === RECIPES_LOADED) {\n    let recList = action.recipes.map(rec => {\n       let recipeObject = {}\n       recipeObject[\"_id\"] = rec.id\n       recipeObject[\"title\"] = rec.title\n       return recipeObject\n    })\n\n    console.log(\"setting recipes to: \", recList)\n    return Object.assign({}, state, {\n      recipes: recList,\n      filteredRecipes: recList\n    });\n  }\n\n  if (action.type === EXTERNAL_RECIPES_LOADED) {\n\n    let recList = action.recipes.map(rec => {\n       let recipeObject = {}\n       recipeObject[\"_id\"] = rec._id\n       recipeObject[\"title\"] = rec.title\n       recipeObject[\"author\"] = rec.author\n\n       return recipeObject\n    })\n\n    console.log(\"setting external recipes to: \", recList)\n\n    // set redirect...\n\n    return Object.assign({}, state, {\n      externalRecipes: recList\n    });\n  }\n\n  if (action.type === UPDATE_RECIPE) {\n    // find the recipes index position.\n    var elementPos = state.recipes.map(function(rec) {return rec.clientID; }).indexOf(action.recipe.clientID);\n\n    // replace with action.recipe\n    if (elementPos !== -1 ) {\n      state.recipes[elementPos] = action.recipe\n    }\n\n    return Object.assign({}, state, {\n      recipes: state.recipes\n    });\n  }\n\n  if (action.type === SET_USERNAME) {\n    return Object.assign({}, state, {\n      user: action.user\n    });\n  }\n\n  if (action.type === SET_VERIFIED ) {\n    console.log(\"setting verified: \", action.verificationMessage)\n    return Object.assign({}, state, {\n      verified: action.verificationMessage\n    });\n  }\n\n  if (action.type === TOGGLE_MENU) {\n    return Object.assign({}, state, {\n      menu: !state.menu\n    });\n  }\n\n  if (action.type === SET_RECIPE ) {\n    return Object.assign({}, state, {\n      recipe: action.recipe\n    });\n  }\n\n  if (action.type === DELETE_LOCAL_RECIPE ) {\n    let recipeList = state.recipes.filter(function(recipe ) {\n      return recipe.clientID !== action.recipeID;\n    });\n\n    return Object.assign({}, state, {\n      recipes: recipeList\n    });\n  }\n\n  if (action.type === TOGGLE_LOADER) {\n    return Object.assign({}, state, {\n      loader: action.loader\n    });\n  }\n\n  if (action.type === WARNING) {\n    return Object.assign({}, state, {\n      warnings: state.warnings.concat({message: action.error})\n    });\n  }\n\n  if (action.type === WARNING_TOGGLE) {\n    return Object.assign({}, state, {\n      warnings: state.warnings.slice(1)\n    });\n  }\n\n  if (action.type === SET_REDIRECT) {\n    console.log(\"redirect set: \" + action.redirect)\n    return Object.assign({}, state, {\n      redirect: action.redirect\n    });\n  }\n\n  if (action.type === SET_DRAFT_RECIPE) {\n    console.log(\"SET_DRAFT_RECIPE reducer called: \" + JSON.stringify(action.recipe))\n\n    return Object.assign({}, state, {\n      draftRecipe: action.recipe\n    });\n  }\n\n  if (action.type === SEARCH) {\n    //\n    // let recipeList = state.recipes.filter(function(recipe ) {\n    //   return recipe.title.toLowerCase().includes(action.query.toLowerCase());\n    // });\n    //\n    // return Object.assign({}, state, {\n    //   filteredRecipes: recipeList\n    // });\n\n    return Object.assign({}, state, {\n      query: action.query\n    });\n  }\n\n  if (action.type === SET_IMPORT_QUEUE) {\n    return Object.assign({}, state, {\n      importQueue: action.queue\n    });\n  };\n\n  if (action.type === SET_SEARCH_SUGGESTIONS) {\n    return Object.assign({}, state, {\n      suggestions: action.suggestions\n    });\n  };\n\n  return state;\n};\n\nexport default rootReducer;\n","import {\n  ADD_RECIPE,\n  GET_TOKEN,\n  GET_RECIPES,\n  VERIFY_EMAIL,\n  DELETE_REMOTE_RECIPE,\n  LOGIN,\n  SIGNUP,\n  WARNING,\n  GET_RECIPE,\n  EXTERNAL_RECIPE_SEARCH,\n  AUTOCOMPLETE,\n  LOGOUT,\n  GRAPHQL,\n  IMPORT_RECIPE,\n  UPDATE_USER_RECORD,\n  SEND_PASSWORD_RESET_EMAIL,\n  CHANGE_PASSWORD,\n  RESEND_VERIFICATION,\n  GET_RECIPE_TOKEN,\n  CLAIM_RECIPE,\n  REQUEST_RECIPE\n} from \"../constants/action-types\";\n\nimport {\n  getRecipes,\n  updateRecipe,\n  deleteLocalRecipe,\n  authFailed,\n  getToken,\n  setVerified,\n  warning,\n  recipesLoaded,\n  externalRecipesLoaded,\n  setUsername,\n  toggleLoader,\n  warningToggle,\n  setRedirect,\n  setRecipe,\n  setDraftRecipe,\n  importRecipes,\n  setImportQueue,\n  setSearchSuggestions,\n  updateUserRecord,\n  sendPasswordResetEmail,\n  requestRecipe\n} from \"../actions/Actions\";\n\nimport {v1 as uuid} from \"uuid\";\n\nimport Auth from '../Auth'\nimport RealmService from '../services/RealmService'\nimport ServerService from '../services/ServerService'\nimport Recipe from '../models/RecipeModel'\nimport useRecipes from \"../graphql/useRecipes\";\nimport useRecipe from \"../graphql/useRecipe\";\n\nimport { ObjectId } from \"bson\";\n\nconst auth = new Auth();\nconst realmService = new RealmService();\nconst serverService = new ServerService();\n\nvar moment = require('moment');\n\nexport function loginMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === LOGIN) {\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            return dispatch(getToken({email: action.user.email, password: action.user.password, context: action.context}));\n          case 2:\n            return dispatch(warning('Invalid password.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function signupMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === SIGNUP) {\n\n        switch (auth.validateCredentials(action.user.email, action.user.password)) {\n          case 1:\n            break;\n          case 2:\n            return dispatch(warning('Password needs 8 characters and a number.'));\n          case 3:\n            return dispatch(warning('Invalid email.'));\n          default:\n            return dispatch(warning('Unidentified validation error.'));\n        }\n\n        var params = {\n          email: action.user.email,\n          password: action.user.password\n        };\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/users\", {\n          method: 'post',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Verification email sent.\") {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(\"Check your email for a link to help complete your signup.\"))\n          } else {\n            dispatch(toggleLoader(false));\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          dispatch(toggleLoader(false));\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function tokenCollectionMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === GET_TOKEN) {\n\n        if (!action.authData) {\n          return dispatch(authFailed(\"Get token failed. Not logged in.\"));\n        }\n\n        var params = {\n          email: action.authData.email,\n          password: action.authData.password\n        };\n\n        let token = localStorage.getItem('recipe_claim_token');\n\n        if (token && token.length > 0 ) {\n          console.log(\"there's a token: \" + token)\n          params.claimRecipeToken = token\n          localStorage.setItem('recipe_claim_token', \"\")\n        }\n\n        var formBody = [];\n        for (var property in params) {\n          var encodedKey = encodeURIComponent(property);\n          var encodedValue = encodeURIComponent(params[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        console.log(\"form body: \" + formBody)\n\n        dispatch(toggleLoader(true));\n\n        fetch(\"https://funky-radish-api.herokuapp.com/authenticate\", {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }),\n          body: formBody\n        })\n        .then(res => {\n\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Enjoy your token, ya filthy animal!\") {\n            console.log(\"resp: \" + JSON.stringify(data))\n\n            realmService.authenticate(data.token)\n            .then(user => {\n              console.log(\"Logged in user: \" + Object.keys(user))\n              auth.setSession(data.token, action.authData.email)\n              auth.setRealmUser(user)\n\n              // If the user doesn't have an associated realm user...\n              // This should only happen on first authentication\n              let userPayload = {\n                realmUser: user,\n                email: action.authData.email,\n                token: data.token\n              }\n\n              dispatch(updateUserRecord(userPayload));\n\n              dispatch(setUsername(action.authData.email));\n              dispatch(toggleLoader(false));\n\n              return dispatch(setRedirect(\"/\"));\n            })\n            .catch(error => {\n              dispatch(toggleLoader(false));\n              return dispatch(warning(\"Realm connect failed: \" + error.message));\n            });\n          }\n          else if (data.message === \"Email not verified.\") {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            return dispatch(warning(\"Check your email to verify your account.\"));\n          }\n          else {\n            dispatch(toggleLoader(false));\n            dispatch(setRedirect(\"/login\"));\n            return dispatch(warning(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          return dispatch(warning(\"Auth failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function logoutMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === LOGOUT) {\n        realmService.logoutRealm()\n        return dispatch(setRedirect(\"/\"));\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function emailVerificationMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === VERIFY_EMAIL) {\n        dispatch(toggleLoader(true));\n        const endpoint = \"https://funky-radish-api.herokuapp.com/verify/\" + action.token\n\n        fetch(endpoint, { method: 'get' })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          console.log(\"fetch returned.\")\n          console.log(data)\n          dispatch(toggleLoader(false));\n          if ( data.message === \"Email verified.\") {\n            return dispatch(setVerified(\"Welcome to Funky Radish! You can now login from any device.\"));\n          }\n          else {\n            return dispatch(setVerified(data.message));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false));\n          return dispatch(setVerified(\"Verification failed: \" + error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function recipeLoadingMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === GET_RECIPES) {\n\n        dispatch(toggleLoader(true));\n        console.log(\"get recipes action called\")\n        dispatch(toggleLoader(false));\n        return dispatch(warning(\"getting recipes\"))\n\n        // return fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n        //   method: 'get',\n        //   headers: new Headers({\n        //     'x-access-token': action.token\n        //   })\n        // })\n        // .then(response => response.json())\n        // .then(json => {\n        //   if (json.message) {\n        //     dispatch(warning(json.message))\n        //     dispatch(toggleLoader(false));\n        //     auth.setToken(\"\");\n        //     return dispatch(getToken());\n        //   }\n        //\n        //   let user = auth.getUser();\n        //   dispatch(setUsername(user));\n        //   dispatch(toggleLoader(false));\n        //\n        //   json.forEach(recipe => recipe.clientID = uuid());\n        //   return dispatch(recipesLoaded(json));\n        // })\n        // .catch(error => {\n        //   dispatch(toggleLoader(false));\n        //   return dispatch(warning(\"Recipe load failed.\"));\n        // });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function addRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === ADD_RECIPE) {\n        let token = auth.getToken();\n\n        console.log(\"add recipe: \" + JSON.stringify(action))\n        console.log(\"token: \" + token)\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be saved.\"));\n        }\n\n        var date = new Date();\n        var formattedDate = moment.utc(date).format(\"YYYY-MM-DDTHH:mm:ss.sssz\").replace(/UTC/, \"Z\");\n\n        var params = {\n          ingredients: action.recipe.ingredients,\n          directions: action.recipe.directions,\n          title: action.recipe.title\n        }\n\n        // if(action.recipe._id) {\n        //   let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + action.recipe._id;\n        //\n        //   fetch(url, {\n        //     method: 'put',\n        //     headers: new Headers({\n        //       'Accept': 'application/json',\n        //       'Content-Type': 'application/json',\n        //       'x-access-token': token\n        //     }),\n        //     body: JSON.stringify(params)\n        //   })\n        //   .then(res=> {\n        //     return res.clone().json()\n        //   })\n        //   .then(data => {\n        //     if (data.message) {\n        //       return dispatch(warning(data.message))\n        //     }\n        //     return dispatch(updateRecipe(data));\n        //   })\n        //   .catch(error => dispatch(warning(error)))\n        // }\n        params = [params];\n\n        fetch(\"https://funky-radish-api.herokuapp.com/recipes\", {\n          method: 'post',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          console.log(res.clone().json())\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message) {\n            return dispatch(warning(data.message))\n          }\n          // update recipe to fill in ._id\n          return dispatch(updateRecipe(data));\n        })\n        .catch(error => dispatch(warning(error)));\n\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function getRecipeMiddleware({dispatch}) {\n  return function(next) {\n    return function(action) {\n      if (action.type === GET_RECIPE) {\n\n        console.log(\"retrieving recipe: \" + action.recipeIdentifier.replaceAll('-', ' '))\n\n        dispatch(toggleLoader(true))\n\n        fetch(\"https://funky-radish-api.herokuapp.com/recipe/\" + action.recipeIdentifier , {\n          method: 'get'\n        })\n        .then(response => response.json())\n        .then(json => {\n          dispatch(toggleLoader(false))\n\n          if (json.error && json.error.length > 0) {\n            return dispatch(warning(json.error))\n          }\n          else {\n            return dispatch(setRecipe(json));\n          }\n        })\n        .catch(error => {\n          dispatch(toggleLoader(false))\n          return dispatch(warning(error.message));\n        });\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function deleteRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === DELETE_REMOTE_RECIPE) {\n\n        let token = auth.getToken();\n\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. Recipe will not be removed.\"));\n        }\n\n        let id = action.recipe._id;\n        let url = \"https://funky-radish-api.herokuapp.com/recipe/\" + id;\n\n        // call to delete recipe.\n        fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-access-token': token\n          })\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Recipe deleted successfully!\" || data.message === \"Authentication failed. Recipe not found.\") {\n            return dispatch(deleteLocalRecipe(action.recipe.clientID))\n          }\n          else {\n            return dispatch(warning(\"Delete failed.\"))\n          }\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function warningCycleMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      // do your stuff\n      if (action.type === WARNING) {\n        setInterval(() => {\n          return dispatch(warningToggle());\n        }, 10000);\n      }\n      return next(action);\n    };\n  };\n}\n\n// export function importRecipesMiddleware({ dispatch }) {\n//   return function(next) {\n//     return function(action) {\n//       if (action.type === IMPORT_RECIPES) {\n//         console.log(\"importing recipes - query: \" + action.query)\n//\n//         dispatch(toggleLoader(true));\n//         const endpoint = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=baf6ca65c5e6461cbdb8f3cc87e1a730&query=\" + action.query\n//\n//         fetch(endpoint, { method: 'get' })\n//         .then(res=> {\n//           return res.clone().json()\n//         })\n//         .then(data => {\n//           //handle overloaded api code.\n//\n//           console.log(\"fetch returned.\")\n//\n//           data.results.forEach(myFunction);\n//\n//           function myFunction(value, index, array) {\n//             var rec = new Recipe(value.title)\n//             console.log(rec.title)\n//             console.log(value.title)\n//           }\n//\n//\n//\n//           dispatch(toggleLoader(false));\n//           // if ( data.message === \"Email verified.\") {\n//           //   return dispatch(setVerified(\"Welcome to Funky Radish! You can now login from any device.\"));\n//           // }\n//           // else {\n//           //   return dispatch(setVerified(data.message));\n//           // }\n//         })\n//         .catch(error => {\n//           dispatch(toggleLoader(false));\n//           return dispatch(setVerified(\"Verification failed: \" + error.message));\n//         });\n//\n//         // dispatch(setImportQueue([\"coookies\", \"butter\"]));\n//       }\n//       return next(action);\n//     };\n//   };\n// }\n\nexport function externalSearchMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === EXTERNAL_RECIPE_SEARCH) {\n        // dispatch(toggleLoader(true))\n\n        console.log(\"calling search: \" + action.query)\n\n        if (action.query.trim().length < 1) {\n          return dispatch(externalRecipesLoaded([]))\n        }\n\n        serverService.searchRecipes(action.query)\n        .then(res=> {\n          console.log(\"recipes: \", res)\n          if(res.length == 0) {\n            console.log(\"Sending an email to myself.\")\n            let payload = {\n              query: action.query,\n              email: 'no email'\n            }\n\n            dispatch(requestRecipe(payload))\n          }\n          return dispatch(externalRecipesLoaded(res))\n        })\n        .catch(err => {\n          console.log(\"here's the error: \" + err)\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function autocompleteMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === AUTOCOMPLETE) {\n        serverService.searchAutocomplete(action.query)\n        .then(res=> {\n          // I hate this. But it works. (see also services/ServerService.js)\n          // I return a false response when the query is empty.\n          // That false response doesn't need to be cloned like the normal fetch Promise\n          // So I just check if it's already got the .suggestions key before returning.\n          // Possible solutions:\n          // 1. Fake the response with something that can be cloned.\n          // 2. Research debounce to se if I can use it to cancel related threads.\n          // 3. Research threads to see if there's a way to cancel the class of threads generated by the autocomplete query.\n\n          if (res.suggestions) {\n            return res\n          } else {\n            return res.clone().json()\n          }\n        })\n        .then(data => {\n          return dispatch(setSearchSuggestions(data.suggestions))\n        })\n        .catch(err => {\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function graphqlMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === GRAPHQL) {\n        console.log(\"graph callin middleware\")\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function recipeImportMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === IMPORT_RECIPE) {\n        serverService.importRecipe(action.address)\n        .then(res=> {\n          let currentRealmUser = localStorage.getItem('realm_user')\n          let newRecID = new ObjectId()\n\n          let protoRecipe = {\n            _id: newRecID,\n            author: currentRealmUser,\n            title: res.title,\n            ingredients: {\n              create: res.ingredients.map((ing) => { return { _id: new ObjectId(), author: currentRealmUser, name: ing }}),\n              link: [newRecID]\n            },\n            directions: {\n              create: res.directions.map((dir) => {return { _id: new ObjectId(), author: currentRealmUser, text: dir }}),\n              link: [newRecID]\n            }\n          }\n          return dispatch(setDraftRecipe(protoRecipe))\n        })\n        .catch(err => {\n          // dispatch(toggleLoader(false))\n          console.log(\"here's the error: \" + err)\n          return dispatch(warning(\"Sorry, I can't read that recipe: \" + err))\n        })\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function updateUserRecordMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === UPDATE_USER_RECORD) {\n        console.log(\"Hit endpoint to update the realm user: \" + JSON.stringify(action.payload))\n\n        let token = auth.getToken();\n        if (!token) {\n          return dispatch(warning(\"You're not logged in. User will not be saved.\"));\n        }\n\n        console.log(\"params... \" )\n        console.log(\"email: \" + action.payload.email)\n        console.log(\"realmUser: \" + action.payload.realmUser.id)\n        console.log(\"other: \" + Object.keys(action.payload.realmUser._profile))\n\n        // And then we need a token in the header\n        let params = {\n          user: action.payload.realmUser._profile.identities[0].id,\n          author: action.payload.realmUser.id,\n          email: action.payload.email\n        }\n\n        console.log(params)\n\n        var formBody = [];\n        for (var property in params) {\n          var encodedKey = encodeURIComponent(property);\n          var encodedValue = encodeURIComponent(params[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        console.log(\"fetching\")\n\n        fetch(\"https://funky-radish-api.herokuapp.com/realmUser/\", {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'x-access-token': token\n          }),\n          body: formBody\n        })\n        .then(res => {\n          // This means the realm user should also have been adjusted.\n          // But this isn't necesarilly relevant to the UI.\n          return\n        })\n      }\n      return next(action);\n    };\n  };\n}\n\n//TODO: can we use the same method as above?\nexport function updateUserPasswordMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === CHANGE_PASSWORD) {\n\n        console.log(\"changing password: \" + JSON.stringify(action.payload))\n\n        if (!auth.validatePassword(action.payload.newPassword)) {\n          return dispatch(warning('Password needs 8 characters and a number.'))\n        }\n\n        // And then we need a token in the header\n        let params = {\n          newPassword: action.payload.newPassword,\n          token: action.payload.token\n        }\n\n        fetch(\"https://funky-radish-api.herokuapp.com/changePassword/\", {\n          method: 'put',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res => {\n          console.log(\"response: \" + res)\n          return dispatch(warning(\"Password Changed.\"));\n        })\n\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function resendVerificationMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === RESEND_VERIFICATION) {\n        var params = {\n          email: action.email\n        };\n\n        console.log(\"params: \" + JSON.stringify(params))\n\n        fetch('https://funky-radish-api.herokuapp.com/resendVerification/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          console.log(\"res: \" + JSON.stringify(res))\n\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Verification email sent.\") {\n            return dispatch(warning(\"Check your email for a link to help complete your signup.\"))\n          } else {\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function sendPasswordResetEmailMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === SEND_PASSWORD_RESET_EMAIL) {\n        var params = {\n          email: action.email\n        };\n\n        console.log(\"params: \" + JSON.stringify(params))\n\n        fetch('https://funky-radish-api.herokuapp.com/resetPassword/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          console.log(\"res: \" + JSON.stringify(res))\n\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Password reset email sent.\") {\n            return dispatch(warning(\"Check your email for a link to help complete your signup.\"))\n          } else {\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n\nexport function claimRecipelMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if (action.type === CLAIM_RECIPE) {\n        console.log(\"claiming recipe (member: \" + action.payload.member + \" token: \" + action.payload.token + \")\")\n        var params = action.payload;\n        let url = \"https://funky-radish-api.herokuapp.com/claimRecipe/\"\n\n        fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          console.log(res.clone().json())\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message) {\n            return dispatch(warning(data.message))\n          }\n          console.log(\"json: \" + JSON.stringify(data))\n          dispatch(warning(\"Recipe acquired.\"));\n\n          return dispatch(setRedirect(\"/\"));\n        })\n        .catch(error => dispatch(warning(error)));\n      }\n      return next(action);\n    };\n  };\n}\n\nexport function requestRecipeMiddleware({ dispatch }) {\n  return function(next) {\n    return function(action) {\n\n      if (action.type === REQUEST_RECIPE) {\n\n        // TODO: validateEmail\n\n        // switch (auth.validateCredentials(action.user.email, action.user.password)) {\n        //   case 1:\n        //     break;\n        //   case 2:\n        //     return dispatch(warning('Password needs 8 characters and a number.'));\n        //   case 3:\n        //     return dispatch(warning('Invalid email.'));\n        //   default:\n        //     return dispatch(warning('Unidentified validation error.'));\n        // }\n\n        var params = {\n          query: action.payload.query,\n          email: action.payload.email\n        };\n\n        console.log(\"requesting: \" + params)\n\n        fetch(\"https://funky-radish-api.herokuapp.com/requestRecipe\", {\n          method: 'post',\n          headers: new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(params)\n        })\n        .then(res=> {\n          return res.clone().json()\n        })\n        .then(data => {\n          if (data.message === \"Email sent.\" && params.email != 'no email') {\n            return dispatch(warning(\"Request sent. Expect a response within 24 hours.\"))\n          } else if (params.email == 'no email'){\n            return\n          } else {\n            return dispatch(warning(data.message))\n          }\n        })\n        .catch(err => {\n          return dispatch(warning('Error: ' + err))\n        })\n      }\n\n      return next(action);\n    };\n  };\n}\n","// Manage persistence of state via local storage.\nexport const loadState = () => {\n  try {\n    let serializedState = localStorage.getItem(\"funkyradish.com:state\");\n\n    if (!serializedState || serializedState === undefined || serializedState === \"undefined\" || serializedState == null) {\n      let initialState = initializeState();\n      localStorage.setItem(\"funkyradish.com:state\", initialState);\n      return initialState;\n    }\n\n    return JSON.parse(serializedState);\n  }\n  catch (err) {\n    console.log(\"error loading state: \" + err)\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    let serializedState = JSON.stringify(state);\n    localStorage.setItem(\"funkyradish.com:state\", serializedState);\n  }\n  catch (err) {\n    console.log(\"error writing state.\")\n  }\n};\n\nexport const initializeState = () => {\n  let initialState = {\n    recipes: [],\n    filteredRecipes: [],\n    menu: false,\n    recipe: null,\n    warnings: []\n  }\n\n  return initialState;\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nimport {\n  tokenCollectionMiddleware,\n  emailVerificationMiddleware,\n  recipeLoadingMiddleware,\n  addRecipeMiddleware,\n  getRecipeMiddleware,\n  deleteRecipeMiddleware,\n  loginMiddleware,\n  signupMiddleware,\n  warningCycleMiddleware,\n  externalSearchMiddleware,\n  autocompleteMiddleware,\n  logoutMiddleware,\n  recipeImportMiddleware,\n  updateUserRecordMiddleware,\n  sendPasswordResetEmailMiddleware,\n  updateUserPasswordMiddleware,\n  resendVerificationMiddleware,\n  claimRecipelMiddleware,\n  requestRecipeMiddleware\n} from \"../middleware\";\n\nimport thunk from \"redux-thunk\";\n\nimport { loadState } from '../stateLoader.js';\n\nconst persistedState = loadState();\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  storeEnhancers(applyMiddleware(\n      tokenCollectionMiddleware,\n      emailVerificationMiddleware,\n      recipeLoadingMiddleware,\n      addRecipeMiddleware,\n      getRecipeMiddleware,\n      deleteRecipeMiddleware,\n      loginMiddleware,\n      signupMiddleware,\n      warningCycleMiddleware,\n      externalSearchMiddleware,\n      autocompleteMiddleware,\n      logoutMiddleware,\n      recipeImportMiddleware,\n      updateUserRecordMiddleware,\n      sendPasswordResetEmailMiddleware,\n      updateUserPasswordMiddleware,\n      resendVerificationMiddleware,\n      claimRecipelMiddleware,\n      requestRecipeMiddleware,\n      thunk\n  ))\n);\n\nexport default store;\n","\"use strict\";\n\nimport \"core-js/stable\";\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport RealmApolloProvider from \"./graphql/RealmApolloProvider\";\n\nimport store from \"./store/index\";\nimport throttle from \"lodash/throttle\";\nimport { saveState } from './stateLoader.js';\n// import { addRecipe } from \"./actions/Actions\";\n\nexport const APP_ID = \"funky-radish-twdxv\";\n\nconst Loader = React.lazy(() => import('./components/Loader'));\n\nstore.subscribe(throttle(() => {\n  saveState({\n    recipes: store.getState().recipes,\n    filteredRecipes: store.getState().recipes,\n    warnings: []\n  });\n}, 1000));\n\nwindow.store = store;\n// window.addRecipe = addRecipe;\n\nReactDOM.render(\n  <RealmApolloProvider>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </RealmApolloProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  GET_RECIPES,\n  GET_RECIPE,\n  ADD_RECIPE,\n  UPDATE_RECIPE,\n  RECIPES_LOADED,\n  EXTERNAL_RECIPES_LOADED,\n  CLEAR_RECIPES,\n  DELETE_REMOTE_RECIPE,\n  DELETE_LOCAL_RECIPE,\n  GET_TOKEN,\n  AUTH_FAILED,\n  VERIFY_EMAIL,\n  SET_VERIFIED,\n  CREATE_USER,\n  LOGIN,\n  SIGNUP,\n  LOGOUT,\n  WARNING,\n  SET_USERNAME,\n  TOGGLE_MENU,\n  TOGGLE_LOADER,\n  SET_RECIPE,\n  WARNING_TOGGLE,\n  SET_REDIRECT,\n  SEARCH,\n  SET_IMPORT_QUEUE,\n  EXTERNAL_RECIPE_SEARCH,\n  AUTOCOMPLETE,\n  SET_SEARCH_SUGGESTIONS,\n  IMPORT_RECIPE,\n  SET_DRAFT_RECIPE,\n  UPDATE_USER_RECORD,\n  SEND_PASSWORD_RESET_EMAIL,\n  CHANGE_PASSWORD,\n  RESEND_VERIFICATION,\n  CLAIM_RECIPE,\n  REQUEST_RECIPE\n} from \"../constants/action-types\"\n\n/* action creators */\n\n// Error handling\nexport function warning(error) {\n  return { type: WARNING, error }\n};\n\n// Auth\nexport function login(user) {\n  return { type: LOGIN, user }\n};\n\nexport function signup(user) {\n  return { type: SIGNUP, user }\n};\n\nexport function getToken(authData) {\n  return { type: GET_TOKEN, authData }\n};\n\nexport function logout() {\n  return { type: LOGOUT }\n};\n\nexport function authFailed(message) {\n  return { type: AUTH_FAILED, message }\n};\n\nexport function verifyEmail(token) {\n  return { type: VERIFY_EMAIL, token }\n};\n\nexport function setVerified(verificationMessage) {\n  return { type: SET_VERIFIED, verificationMessage }\n};\n\nexport function createUser(email) {\n  return { type: CREATE_USER, email }\n};\n\n// Recipes\nexport function getRecipes(token) {\n  return { type: GET_RECIPES, token }\n};\n\nexport function getRecipe(recipeIdentifier) {\n  return { type: GET_RECIPE, recipeIdentifier }\n};\n\nexport function addDatabaseRecipe(recipe) {\n  return { type: ADD_RECIPE, recipe }\n};\n\nexport function updateRecipe(recipe) {\n  return { type: UPDATE_RECIPE, recipe }\n};\n\nexport function recipesLoaded(recipes) {\n  return { type: RECIPES_LOADED, recipes }\n};\n\nexport function externalRecipesLoaded(recipes) {\n  return { type: EXTERNAL_RECIPES_LOADED, recipes }\n};\n\nexport function clearRecipes() {\n  return { type: CLEAR_RECIPES }\n};\n\nexport function setRecipe(recipe) {\n  return { type: SET_RECIPE, recipe }\n};\n\nexport function deleteLocalRecipe(recipeID) {\n  return { type: DELETE_LOCAL_RECIPE, recipeID }\n};\n\nexport function deleteRemoteRecipe(recipe) {\n  return { type: DELETE_REMOTE_RECIPE, recipe }\n};\n\nexport function setUsername(user) {\n  return { type: SET_USERNAME, user }\n};\n\nexport function toggleMenu() {\n  return { type: TOGGLE_MENU }\n};\n\nexport function toggleLoader(loader) {\n  return { type: TOGGLE_LOADER, loader }\n};\n\nexport function warningToggle() {\n  return { type: WARNING_TOGGLE }\n};\n\nexport function setRedirect(redirect) {\n  return { type: SET_REDIRECT, redirect }\n};\n\nexport function search(query) {\n  return { type: SEARCH, query }\n};\n\nexport function setImportQueue(queue) {\n  return { type: SET_IMPORT_QUEUE, queue }\n};\n\nexport function externalRecipeSearch(query) {\n  return { type: EXTERNAL_RECIPE_SEARCH, query }\n};\n\nexport function autocomplete(query) {\n  return { type: AUTOCOMPLETE, query }\n};\n\nexport function setSearchSuggestions(suggestions) {\n  return { type: SET_SEARCH_SUGGESTIONS, suggestions }\n};\n\nexport function importRecipe(address) {\n  return { type: IMPORT_RECIPE, address }\n};\n\nexport function setDraftRecipe(recipe) {\n  return { type: SET_DRAFT_RECIPE, recipe }\n};\n\nexport function updateUserRecord(payload) {\n  return { type: UPDATE_USER_RECORD, payload }\n};\n\nexport function changePassword(payload) {\n  return { type: CHANGE_PASSWORD, payload }\n};\n\nexport function resendVerification(email) {\n  return { type: RESEND_VERIFICATION, email }\n};\n\nexport function sendPasswordResetEmail(email) {\n  return { type: SEND_PASSWORD_RESET_EMAIL, email }\n};\n\nexport function claimRecipe(payload) {\n  return { type: CLAIM_RECIPE, payload }\n};\n\nexport function requestRecipe(payload) {\n  return { type: REQUEST_RECIPE, payload }\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toggleLoader } from \"../actions/Actions\";\n\nexport default function Loader(props) {\n\n  const dispatch = useDispatch()\n  var loader = useSelector((state) => state.loader)\n\n  if (props.loader) {\n    if (props.loader == 'true') {\n      console.log(\"props loader true: \" + props.loader )\n\n    }\n    else {\n      console.log(\"props loader false: \" + props.loader )\n\n    }\n  } else {\n    console.log(\"props loader no existe: \" + props.loader )\n\n  }\n\n  return !loader ? (<div></div>) : (\n    <div className=\"loader\">\n      Loading...\n    </div>\n  );\n}\n"],"sourceRoot":""}